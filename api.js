var messages={"session.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given session."},
"session.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class session"},
"session.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the sessions known to the system."},
"session.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the session instance with the specified UUID."},
"session.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"session"},doc:"All constructor arguments"}],doc:"Create a new session instance, and return its handle."},
"session.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Destroy the specified session instance."},
"session.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the uuid field of the given session."},
"session.get_this_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the this_host field of the given session."},
"session.get_this_user":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the this_user field of the given session."},
"session.get_last_active":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the last_active field of the given session."},
"session.get_pool":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the pool field of the given session."},
"session.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the other_config field of the given session."},
"session.get_is_local_superuser":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"}],doc:"Get the is_local_superuser field of the given session."},
"session.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given session."},
"session.set_this_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the this_host field of the given session."},
"session.set_this_user":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"user"},doc:"New value to set"}],doc:"Set the this_user field of the given session."},
"session.set_last_active":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_active field of the given session."},
"session.set_pool":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the pool field of the given session."},
"session.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given session."},
"session.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given session."},
"session.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given session.  If the key is not in that Map, then do nothing."},
"session.set_is_local_superuser":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"session"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_local_superuser field of the given session."},
"session.login_with_password":{params:[{name:"uname",ty:{ty:"string"},doc:"Username for login."},{name:"pwd",ty:{ty:"string"},doc:"Password for login."},{name:"version",ty:{ty:"string"},doc:"Client API version."}],doc:"Attempt to authenticate the user, returning a session reference if successful"},
"session.logout":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Log out of a session"},
"session.change_password":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"old_pwd",ty:{ty:"string"},doc:"Old password for account"},{name:"new_pwd",ty:{ty:"string"},doc:"New password for account"}],doc:"Change the account password; if your session is authenticated with root priviledges then the old_pwd is validated and the new_pwd is set regardless"},
"session.slave_login":{params:[{name:"host",ty:{ty:"ref",class:"host"},doc:"Host id of slave"},{name:"psecret",ty:{ty:"string"},doc:"Pool secret"}],doc:"Attempt to authenticate to the pool master by presenting the slave's host ref and pool secret"},
"session.slave_local_login":{params:[{name:"psecret",ty:{ty:"string"},doc:"Pool secret"}],doc:"Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host."},
"session.slave_local_login_with_password":{params:[{name:"uname",ty:{ty:"string"},doc:"Username for login."},{name:"pwd",ty:{ty:"string"},doc:"Password for login."}],doc:"Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host."},
"session.local_logout":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Log out of local session."},
"auth.get_subject_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"subject_name",ty:{ty:"string"},doc:"The human-readable subject_name, such as a username or a groupname"}],doc:"This call queries the external directory service to obtain the subject_identifier as a string from the human-readable subject_name"},
"auth.get_subject_information_from_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"subject_identifier",ty:{ty:"string"},doc:"A string containing the subject_identifier, unique in the external directory service"}],doc:"This call queries the external directory service to obtain the user information (e.g. username, organization etc) from the specified subject_identifier"},
"auth.get_group_membership":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"subject_identifier",ty:{ty:"string"},doc:"A string containing the subject_identifier, unique in the external directory service"}],doc:"This calls queries the external directory service to obtain the transitively-closed set of groups that the the subject_identifier is member of."},
"subject.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given subject."},
"subject.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class subject"},
"subject.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the subjects known to the system."},
"subject.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the subject instance with the specified UUID."},
"subject.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"subject"},doc:"All constructor arguments"}],doc:"Create a new subject instance, and return its handle."},
"subject.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Destroy the specified subject instance."},
"subject.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get the uuid field of the given subject."},
"subject.get_subject_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get the subject_identifier field of the given subject."},
"subject.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"}],doc:"Get the other_config field of the given subject."},
"subject.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given subject."},
"subject.set_subject_identifier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the subject_identifier field of the given subject."},
"subject.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given subject."},
"subject.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given subject."},
"subject.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"subject"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given subject.  If the key is not in that Map, then do nothing."},
"task.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given task."},
"task.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class task"},
"task.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the tasks known to the system."},
"task.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the task instance with the specified UUID."},
"task.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"task"},doc:"All constructor arguments"}],doc:"Create a new task instance, and return its handle."},
"task.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Destroy the specified task instance."},
"task.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the task instances with the given label."},
"task.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the uuid field of the given task."},
"task.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the name/label field of the given task."},
"task.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the name/description field of the given task."},
"task.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given task."},
"task.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the current_operations field of the given task."},
"task.get_created":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the created field of the given task."},
"task.get_finished":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the finished field of the given task."},
"task.get_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the status field of the given task."},
"task.get_session":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the session field of the given task."},
"task.get_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the resident_on field of the given task."},
"task.get_progress":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the progress field of the given task."},
"task.get_externalpid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the externalpid field of the given task."},
"task.get_stunnelpid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the stunnelpid field of the given task."},
"task.get_forwarded":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the forwarded field of the given task."},
"task.get_forwarded_to":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the forwarded_to field of the given task."},
"task.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the type field of the given task."},
"task.get_result":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the result field of the given task."},
"task.get_error_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the error_info field of the given task."},
"task.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the other_config field of the given task."},
"task.get_subtask_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the subtask_of field of the given task."},
"task.get_subtasks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"}],doc:"Get the subtasks field of the given task."},
"task.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given task."},
"task.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given task."},
"task.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given task."},
"task.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"task_allowed_operations",values:["cancel"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given task."},
"task.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"task_allowed_operations",values:["cancel"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given task.  If the value is already in that Set, then do nothing."},
"task.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"task_allowed_operations",values:["cancel"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given task.  If the value is not in that Set, then do nothing."},
"task.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"task_allowed_operations",values:["cancel"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given task."},
"task.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"task_allowed_operations",values:["cancel"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given task."},
"task.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given task.  If the key is not in that Map, then do nothing."},
"task.set_created":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the created field of the given task."},
"task.set_finished":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the finished field of the given task."},
"task.set_status":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"task_status_type",values:["pending","success","failure","cancelling","cancelled"]},doc:"New value to set"}],doc:"Set the status field of the given task."},
"task.set_session":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"session"},doc:"New value to set"}],doc:"Set the session field of the given task."},
"task.set_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the resident_on field of the given task."},
"task.set_progress":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the progress field of the given task."},
"task.set_externalpid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the externalpid field of the given task."},
"task.set_stunnelpid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the stunnelpid field of the given task."},
"task.set_forwarded":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the forwarded field of the given task."},
"task.set_forwarded_to":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the forwarded_to field of the given task."},
"task.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the type field of the given task."},
"task.set_result":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the result field of the given task."},
"task.set_error_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the error_info field of the given task."},
"task.add_error_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the error_info field of the given task.  If the value is already in that Set, then do nothing."},
"task.remove_error_info":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the error_info field of the given task.  If the value is not in that Set, then do nothing."},
"task.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given task."},
"task.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given task."},
"task.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given task.  If the key is not in that Map, then do nothing."},
"task.set_subtask_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"task"},doc:"New value to set"}],doc:"Set the subtask_of field of the given task."},
"task.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"short label for the new task"},{name:"description",ty:{ty:"string"},doc:"longer description for the new task"}],doc:"Create a new task object which must be manually destroyed."},
"task.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"task"},doc:"Reference to the task object"}],doc:"Destroy the task object"},
"task.cancel":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"task",ty:{ty:"ref",class:"task"},doc:"The task"}],doc:"Request that a task be cancelled. Note that a task may fail to be cancelled and may complete or fail normally and note that, even when a task does cancel, it might take an arbitrary amount of time."},
"task.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the tasks known to the system."},
"task.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the tasks known to the system."},
"task.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of task references to task records for all tasks known to the system."},
"event.register":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"classes",ty:{ty:"set",contents:{ty:"string"}},doc:"register for events for the indicated classes"}],doc:"Registers this session with the event system.  Specifying the empty list will register for all classes."},
"event.unregister":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"classes",ty:{ty:"set",contents:{ty:"string"}},doc:"remove this session's registration for the indicated classes"}],doc:"Unregisters this session with the event system"},
"event.next":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Blocking call which returns a (possibly empty) batch of events"},
"event.get_current_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return the ID of the next event to be generated by the system"},
"pool.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given pool."},
"pool.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class pool"},
"pool.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the pools known to the system."},
"pool.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the pool instance with the specified UUID."},
"pool.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"pool"},doc:"All constructor arguments"}],doc:"Create a new pool instance, and return its handle."},
"pool.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Destroy the specified pool instance."},
"pool.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the uuid field of the given pool."},
"pool.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the name_label field of the given pool."},
"pool.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the name_description field of the given pool."},
"pool.get_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the master field of the given pool."},
"pool.get_default_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the default_SR field of the given pool."},
"pool.get_suspend_image_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the suspend_image_SR field of the given pool."},
"pool.get_crash_dump_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the crash_dump_SR field of the given pool."},
"pool.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the other_config field of the given pool."},
"pool.get_ha_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_enabled field of the given pool."},
"pool.get_ha_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_configuration field of the given pool."},
"pool.get_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_statefiles field of the given pool."},
"pool.get_ha_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_host_failures_to_tolerate field of the given pool."},
"pool.get_ha_plan_exists_for":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_plan_exists_for field of the given pool."},
"pool.get_ha_allow_overcommit":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_allow_overcommit field of the given pool."},
"pool.get_ha_overcommitted":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the ha_overcommitted field of the given pool."},
"pool.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the blobs field of the given pool."},
"pool.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the tags field of the given pool."},
"pool.get_gui_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"}],doc:"Get the gui_config field of the given pool."},
"pool.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given pool."},
"pool.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name_label field of the given pool."},
"pool.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name_description field of the given pool."},
"pool.set_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the master field of the given pool."},
"pool.set_default_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the default_SR field of the given pool."},
"pool.set_suspend_image_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the suspend_image_SR field of the given pool."},
"pool.set_crash_dump_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the crash_dump_SR field of the given pool."},
"pool.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given pool."},
"pool.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given pool."},
"pool.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given pool.  If the key is not in that Map, then do nothing."},
"pool.set_ha_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the ha_enabled field of the given pool."},
"pool.set_ha_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the ha_configuration field of the given pool."},
"pool.add_to_ha_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the ha_configuration field of the given pool."},
"pool.remove_from_ha_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the ha_configuration field of the given pool.  If the key is not in that Map, then do nothing."},
"pool.set_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the ha_statefiles field of the given pool."},
"pool.add_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the ha_statefiles field of the given pool.  If the value is already in that Set, then do nothing."},
"pool.remove_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the ha_statefiles field of the given pool.  If the value is not in that Set, then do nothing."},
"pool.set_ha_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the ha_host_failures_to_tolerate field of the given pool."},
"pool.set_ha_plan_exists_for":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the ha_plan_exists_for field of the given pool."},
"pool.set_ha_allow_overcommit":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the ha_allow_overcommit field of the given pool."},
"pool.set_ha_overcommitted":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the ha_overcommitted field of the given pool."},
"pool.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given pool."},
"pool.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given pool."},
"pool.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given pool.  If the key is not in that Map, then do nothing."},
"pool.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given pool."},
"pool.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given pool.  If the value is already in that Set, then do nothing."},
"pool.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given pool.  If the value is not in that Set, then do nothing."},
"pool.set_gui_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the gui_config field of the given pool."},
"pool.add_to_gui_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the gui_config field of the given pool."},
"pool.remove_from_gui_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the gui_config field of the given pool.  If the key is not in that Map, then do nothing."},
"pool.join":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"master_address",ty:{ty:"string"},doc:"The hostname of the master of the pool to join"},{name:"master_username",ty:{ty:"string"},doc:"The username of the master (for initial authentication)"},{name:"master_password",ty:{ty:"string"},doc:"The password for the master (for initial authentication)"}],doc:"Instruct host to join a new pool"},
"pool.join_force":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"master_address",ty:{ty:"string"},doc:"The hostname of the master of the pool to join"},{name:"master_username",ty:{ty:"string"},doc:"The username of the master (for initial authentication)"},{name:"master_password",ty:{ty:"string"},doc:"The password for the master (for initial authentication)"}],doc:"Instruct host to join a new pool"},
"pool.eject":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to eject"}],doc:"Instruct a pool master to eject a host from the pool"},
"pool.initial_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Internal use only"},
"pool.emergency_transition_to_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Instruct host that's currently a slave to transition to being master"},
"pool.emergency_reset_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"master_address",ty:{ty:"string"},doc:"The hostname of the master"}],doc:"Instruct a slave already in a pool that the master has changed"},
"pool.recover_slaves":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Instruct a pool master, M, to try and contact its slaves and, if slaves are in emergency mode, reset their master address to M."},
"pool.hello":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host_uuid",ty:{ty:"string"},doc:""},{name:"host_address",ty:{ty:"string"},doc:""}],doc:"Internal use only"},
"pool.is_slave":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:""}],doc:"Internal use only"},
"pool.create_VLAN":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"device",ty:{ty:"string"},doc:"physical interface on which to create the VLAN interface"},{name:"network",ty:{ty:"ref",class:"network"},doc:"network to which this interface should be connected"},{name:"VLAN",ty:{ty:"int"},doc:"VLAN tag for the new interface"}],doc:"Create PIFs, mapping a network to the same physical interface/VLAN on each host. This call is deprecated: use Pool.create_VLAN_from_PIF instead."},
"pool.create_VLAN_from_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pif",ty:{ty:"ref",class:"PIF"},doc:"physical interface on any particular host, that identifies the PIF on which to create the (pool-wide) VLAN interface"},{name:"network",ty:{ty:"ref",class:"network"},doc:"network to which this interface should be connected"},{name:"VLAN",ty:{ty:"int"},doc:"VLAN tag for the new interface"}],doc:"Create a pool-wide VLAN by taking the PIF."},
"pool.slave_network_report":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"phydevs",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"(device,bridge) pairs of physical NICs on slave"},{name:"dev_to_mac",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"(device,mac) pairs of physical NICs on slave"},{name:"dev_to_mtu",ty:{ty:"map",keys:{ty:"string"},values:{ty:"int"}},doc:"(device,mtu) pairs of physical NICs on slave"},{name:"slave_host",ty:{ty:"ref",class:"host"},doc:"the host that the PIFs will be attached to when created"}],doc:"Internal use only"},
"pool.enable_ha":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"heartbeat_srs",ty:{ty:"set",contents:{ty:"ref",class:"SR"}},doc:"Set of SRs to use for storage heartbeating."},{name:"configuration",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Detailed HA configuration to apply"}],doc:"Turn on High Availability mode"},
"pool.disable_ha":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Turn off High Availability mode"},
"pool.sync_database":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Forcibly synchronise the database now"},
"pool.designate_new_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host who should become the new master"}],doc:"Perform an orderly handover of the role of master to the referenced host."},
"pool.ha_prevent_restarts_for":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"seconds",ty:{ty:"int"},doc:"The number of seconds to block the restart thread for"}],doc:"When this call returns the VM restart logic will not run for the requested number of seconds. If the argument is zero then the restart thread is immediately unblocked"},
"pool.ha_failover_plan_exists":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"n",ty:{ty:"int"},doc:"The number of host failures to plan for"}],doc:"Returns true if a VM failover plan exists for up to 'n' host failures"},
"pool.ha_compute_max_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Returns the maximum number of host failures we could tolerate before we would be unable to restart configured VMs"},
"pool.ha_compute_hypothetical_max_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"configuration",ty:{ty:"map",keys:{ty:"ref",class:"VM"},values:{ty:"string"}},doc:"Map of protected VM reference to restart priority"}],doc:"Returns the maximum number of host failures we could tolerate before we would be unable to restart the provided VMs"},
"pool.ha_compute_vm_failover_plan":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"failed_hosts",ty:{ty:"set",contents:{ty:"ref",class:"host"}},doc:"The set of hosts to assume have failed"},{name:"failed_vms",ty:{ty:"set",contents:{ty:"ref",class:"VM"}},doc:"The set of VMs to restart"}],doc:"Return a VM failover plan assuming a given subset of hosts fail"},
"pool.set_ha_host_failures_to_tolerate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool"},doc:"The pool"},{name:"value",ty:{ty:"int"},doc:"New number of host failures to consider"}],doc:"Set the maximum number of host failures to consider in the HA VM restart planner"},
"pool.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pool",ty:{ty:"ref",class:"pool"},doc:"The pool"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this pool"},
"pool.ha_schedule_plan_recomputation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Signal that the plan should be recomputed (eg a host has come online)"},
"pool.enable_binary_storage":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Enable the storage of larger objects, such as RRDs, messages and binary blobs across all hosts in the pool"},
"pool.disable_binary_storage":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Disable the storage of larger objects, such as RRDs, messages and binary blobs across all hosts in the pool. This will destroy all of these objects where they exist."},
"pool.enable_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pool",ty:{ty:"ref",class:"pool"},doc:"The pool whose external authentication should be enabled"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"A list of key-values containing the configuration data"},{name:"service_name",ty:{ty:"string"},doc:"The name of the service"},{name:"auth_type",ty:{ty:"string"},doc:"The type of authentication (e.g. AD for Active Directory)"}],doc:"This call enables external authentication on all the hosts of the pool"},
"pool.disable_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pool",ty:{ty:"ref",class:"pool"},doc:"The pool whose external authentication should be disabled"}],doc:"This call disables external authentication on all the hosts of the pool"},
"pool.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the pools known to the system."},
"pool.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the pools known to the system."},
"pool.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of pool references to pool records for all pools known to the system."},
"pool_patch.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given pool_patch."},
"pool_patch.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class pool_patch"},
"pool_patch.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the pool_patchs known to the system."},
"pool_patch.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the pool_patch instance with the specified UUID."},
"pool_patch.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"pool_patch"},doc:"All constructor arguments"}],doc:"Create a new pool_patch instance, and return its handle."},
"pool_patch.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Destroy the specified pool_patch instance."},
"pool_patch.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the pool_patch instances with the given label."},
"pool_patch.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the uuid field of the given pool_patch."},
"pool_patch.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the name/label field of the given pool_patch."},
"pool_patch.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the name/description field of the given pool_patch."},
"pool_patch.get_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the version field of the given pool_patch."},
"pool_patch.get_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the filename field of the given pool_patch."},
"pool_patch.get_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the size field of the given pool_patch."},
"pool_patch.get_pool_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the pool_applied field of the given pool_patch."},
"pool_patch.get_host_patches":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the host_patches field of the given pool_patch."},
"pool_patch.get_after_apply_guidance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the after_apply_guidance field of the given pool_patch."},
"pool_patch.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"}],doc:"Get the other_config field of the given pool_patch."},
"pool_patch.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given pool_patch."},
"pool_patch.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given pool_patch."},
"pool_patch.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given pool_patch."},
"pool_patch.set_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the version field of the given pool_patch."},
"pool_patch.set_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the filename field of the given pool_patch."},
"pool_patch.set_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the size field of the given pool_patch."},
"pool_patch.set_pool_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the pool_applied field of the given pool_patch."},
"pool_patch.set_after_apply_guidance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"after_apply_guidance",values:["restartHVM","restartPV","restartHost","restartXAPI"]}},doc:"New value to set"}],doc:"Set the after_apply_guidance field of the given pool_patch."},
"pool_patch.add_after_apply_guidance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"after_apply_guidance",values:["restartHVM","restartPV","restartHost","restartXAPI"]},doc:"New value to add"}],doc:"Add the given value to the after_apply_guidance field of the given pool_patch.  If the value is already in that Set, then do nothing."},
"pool_patch.remove_after_apply_guidance":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"after_apply_guidance",values:["restartHVM","restartPV","restartHost","restartXAPI"]},doc:"Value to remove"}],doc:"Remove the given value from the after_apply_guidance field of the given pool_patch.  If the value is not in that Set, then do nothing."},
"pool_patch.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given pool_patch."},
"pool_patch.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given pool_patch."},
"pool_patch.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given pool_patch.  If the key is not in that Map, then do nothing."},
"pool_patch.apply":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch to apply"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to apply the patch too"}],doc:"Apply the selected patch to a host and return its output"},
"pool_patch.pool_apply":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch to apply"}],doc:"Apply the selected patch to all hosts in the pool and return a map of host_ref -> patch output"},
"pool_patch.precheck":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch whose prechecks will be run"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to run the prechecks on"}],doc:"Execute the precheck stage of the selected patch on a host and return its output"},
"pool_patch.clean":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch to clean up"}],doc:"Removes the patch's files from all hosts in the pool, but does not remove the database entries"},
"pool_patch.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"pool_patch"},doc:"The patch to destroy"}],doc:"Removes the patch's files from all hosts in the pool, and removes the database entries.  Only works on unapplied patches."},
"pool_patch.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the pool_patchs known to the system."},
"pool_patch.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the pool_patchs known to the system."},
"pool_patch.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of pool_patch references to pool_patch records for all pool_patchs known to the system."},
"VM.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VM."},
"VM.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VM"},
"VM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VMs known to the system."},
"VM.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VM instance with the specified UUID."},
"VM.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VM"},doc:"All constructor arguments"}],doc:"Create a new VM instance, and return its handle."},
"VM.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Destroy the specified VM.  The VM is completely removed from the system.  This function can only be called when the VM is in the Halted State."},
"VM.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the VM instances with the given label."},
"VM.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the uuid field of the given VM."},
"VM.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VM."},
"VM.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VM."},
"VM.get_power_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the power_state field of the given VM."},
"VM.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the name/label field of the given VM."},
"VM.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the name/description field of the given VM."},
"VM.get_user_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the user_version field of the given VM."},
"VM.get_is_a_template":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the is_a_template field of the given VM."},
"VM.get_suspend_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the suspend_VDI field of the given VM."},
"VM.get_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the resident_on field of the given VM."},
"VM.get_scheduled_to_be_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the scheduled_to_be_resident_on field of the given VM."},
"VM.get_affinity":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the affinity field of the given VM."},
"VM.get_memory_target":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/target field of the given VM."},
"VM.get_memory_static_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/static_max field of the given VM."},
"VM.get_memory_dynamic_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/dynamic_max field of the given VM."},
"VM.get_memory_dynamic_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/dynamic_min field of the given VM."},
"VM.get_memory_static_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the memory/static_min field of the given VM."},
"VM.get_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VCPUs/params field of the given VM."},
"VM.get_VCPUs_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VCPUs/max field of the given VM."},
"VM.get_VCPUs_at_startup":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VCPUs/at_startup field of the given VM."},
"VM.get_actions_after_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the actions/after_shutdown field of the given VM."},
"VM.get_actions_after_reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the actions/after_reboot field of the given VM."},
"VM.get_actions_after_crash":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the actions/after_crash field of the given VM."},
"VM.get_consoles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the consoles field of the given VM."},
"VM.get_VIFs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VIFs field of the given VM."},
"VM.get_VBDs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VBDs field of the given VM."},
"VM.get_crash_dumps":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the crash_dumps field of the given VM."},
"VM.get_VTPMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the VTPMs field of the given VM."},
"VM.get_PV_bootloader":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/bootloader field of the given VM."},
"VM.get_PV_kernel":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/kernel field of the given VM."},
"VM.get_PV_ramdisk":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/ramdisk field of the given VM."},
"VM.get_PV_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/args field of the given VM."},
"VM.get_PV_bootloader_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/bootloader_args field of the given VM."},
"VM.get_PV_legacy_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PV/legacy_args field of the given VM."},
"VM.get_HVM_boot_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the HVM/boot_policy field of the given VM."},
"VM.get_HVM_boot_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the HVM/boot_params field of the given VM."},
"VM.get_HVM_shadow_multiplier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the HVM/shadow_multiplier field of the given VM."},
"VM.get_platform":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the platform field of the given VM."},
"VM.get_PCI_bus":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the PCI_bus field of the given VM."},
"VM.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the other_config field of the given VM."},
"VM.get_domid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the domid field of the given VM."},
"VM.get_domarch":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the domarch field of the given VM."},
"VM.get_last_boot_CPU_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the last_boot_CPU_flags field of the given VM."},
"VM.get_is_control_domain":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the is_control_domain field of the given VM."},
"VM.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the metrics field of the given VM."},
"VM.get_guest_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the guest_metrics field of the given VM."},
"VM.get_last_booted_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the last_booted_record field of the given VM."},
"VM.get_recommendations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the recommendations field of the given VM."},
"VM.get_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the xenstore_data field of the given VM."},
"VM.get_ha_always_run":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the ha_always_run field of the given VM."},
"VM.get_ha_restart_priority":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the ha_restart_priority field of the given VM."},
"VM.get_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the is_a_snapshot field of the given VM."},
"VM.get_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshot_of field of the given VM."},
"VM.get_snapshots":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshots field of the given VM."},
"VM.get_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the snapshot_time field of the given VM."},
"VM.get_transportable_snapshot_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the transportable_snapshot_id field of the given VM."},
"VM.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the blobs field of the given VM."},
"VM.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the tags field of the given VM."},
"VM.get_blocked_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Get the blocked_operations field of the given VM."},
"VM.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VM."},
"VM.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_shadow_memory_live","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","destroy"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VM."},
"VM.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_shadow_memory_live","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","destroy"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VM.  If the value is already in that Set, then do nothing."},
"VM.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_shadow_memory_live","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","destroy"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VM.  If the value is not in that Set, then do nothing."},
"VM.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_shadow_memory_live","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","destroy"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VM."},
"VM.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_shadow_memory_live","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","destroy"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VM."},
"VM.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VM.  If the key is not in that Map, then do nothing."},
"VM.set_power_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vm_power_state",values:["Halted","Paused","Running","Suspended","Unknown"]},doc:"New value to set"}],doc:"Set the power_state field of the given VM."},
"VM.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given VM."},
"VM.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given VM."},
"VM.set_user_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the user_version field of the given VM."},
"VM.set_is_a_template":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_a_template field of the given VM."},
"VM.set_suspend_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the suspend_VDI field of the given VM."},
"VM.set_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the resident_on field of the given VM."},
"VM.set_scheduled_to_be_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the scheduled_to_be_resident_on field of the given VM."},
"VM.set_affinity":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the affinity field of the given VM."},
"VM.set_memory_target":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/target field of the given VM."},
"VM.set_memory_static_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/static_max field of the given VM."},
"VM.set_memory_dynamic_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/dynamic_max field of the given VM."},
"VM.set_memory_dynamic_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/dynamic_min field of the given VM."},
"VM.set_memory_static_min":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/static_min field of the given VM."},
"VM.set_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the VCPUs/params field of the given VM."},
"VM.add_to_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/params field of the given VM."},
"VM.remove_from_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/params field of the given VM.  If the key is not in that Map, then do nothing."},
"VM.set_VCPUs_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the VCPUs/max field of the given VM."},
"VM.set_VCPUs_at_startup":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the VCPUs/at_startup field of the given VM."},
"VM.set_actions_after_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"on_normal_exit",values:["destroy","restart"]},doc:"New value to set"}],doc:"Set the actions/after_shutdown field of the given VM."},
"VM.set_actions_after_reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"on_normal_exit",values:["destroy","restart"]},doc:"New value to set"}],doc:"Set the actions/after_reboot field of the given VM."},
"VM.set_actions_after_crash":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"on_crash_behaviour",values:["destroy","coredump_and_destroy","restart","coredump_and_restart","preserve","rename_restart"]},doc:"New value to set"}],doc:"Set the actions/after_crash field of the given VM."},
"VM.set_PV_bootloader":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/bootloader field of the given VM."},
"VM.set_PV_kernel":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/kernel field of the given VM."},
"VM.set_PV_ramdisk":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/ramdisk field of the given VM."},
"VM.set_PV_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/args field of the given VM."},
"VM.set_PV_bootloader_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/bootloader_args field of the given VM."},
"VM.set_PV_legacy_args":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PV/legacy_args field of the given VM."},
"VM.set_HVM_boot_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the HVM/boot_policy field of the given VM."},
"VM.set_HVM_boot_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the HVM/boot_params field of the given VM."},
"VM.add_to_HVM_boot_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the HVM/boot_params field of the given VM."},
"VM.remove_from_HVM_boot_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the HVM/boot_params field of the given VM.  If the key is not in that Map, then do nothing."},
"VM.set_HVM_shadow_multiplier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the HVM/shadow_multiplier field of the given VM."},
"VM.set_platform":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the platform field of the given VM."},
"VM.add_to_platform":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the platform field of the given VM."},
"VM.remove_from_platform":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the platform field of the given VM.  If the key is not in that Map, then do nothing."},
"VM.set_PCI_bus":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the PCI_bus field of the given VM."},
"VM.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VM."},
"VM.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VM."},
"VM.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VM.  If the key is not in that Map, then do nothing."},
"VM.set_domid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the domid field of the given VM."},
"VM.set_domarch":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the domarch field of the given VM."},
"VM.set_last_boot_CPU_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the last_boot_CPU_flags field of the given VM."},
"VM.add_to_last_boot_CPU_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the last_boot_CPU_flags field of the given VM."},
"VM.remove_from_last_boot_CPU_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the last_boot_CPU_flags field of the given VM.  If the key is not in that Map, then do nothing."},
"VM.set_is_control_domain":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_control_domain field of the given VM."},
"VM.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given VM."},
"VM.set_guest_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"New value to set"}],doc:"Set the guest_metrics field of the given VM."},
"VM.set_last_booted_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the last_booted_record field of the given VM."},
"VM.set_recommendations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the recommendations field of the given VM."},
"VM.set_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the xenstore_data field of the given VM."},
"VM.add_to_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the xenstore_data field of the given VM."},
"VM.remove_from_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the xenstore_data field of the given VM.  If the key is not in that Map, then do nothing."},
"VM.set_ha_always_run":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the ha_always_run field of the given VM."},
"VM.set_ha_restart_priority":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the ha_restart_priority field of the given VM."},
"VM.set_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_a_snapshot field of the given VM."},
"VM.set_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the snapshot_of field of the given VM."},
"VM.set_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the snapshot_time field of the given VM."},
"VM.set_transportable_snapshot_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the transportable_snapshot_id field of the given VM."},
"VM.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given VM."},
"VM.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given VM."},
"VM.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given VM.  If the key is not in that Map, then do nothing."},
"VM.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given VM."},
"VM.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given VM.  If the value is already in that Set, then do nothing."},
"VM.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given VM.  If the value is not in that Set, then do nothing."},
"VM.set_blocked_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_shadow_memory_live","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","destroy"]},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the blocked_operations field of the given VM."},
"VM.add_to_blocked_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_shadow_memory_live","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","destroy"]},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the blocked_operations field of the given VM."},
"VM.remove_from_blocked_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"key",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_shadow_memory_live","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","destroy"]},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blocked_operations field of the given VM.  If the key is not in that Map, then do nothing."},
"VM.snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be snapshotted"},{name:"new_name",ty:{ty:"string"},doc:"The name of the snapshotted VM"}],doc:"Snapshots the specified VM, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write)."},
"VM.snapshot_with_quiesce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be snapshotted"},{name:"new_name",ty:{ty:"string"},doc:"The name of the snapshotted VM"}],doc:"Snapshots the specified VM with quiesce, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write)."},
"VM.clone":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be cloned"},{name:"new_name",ty:{ty:"string"},doc:"The name of the cloned VM"}],doc:"Clones the specified VM, making a new VM. Clone automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).   This function can only be called when the VM is in the Halted State."},
"VM.copy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be copied"},{name:"new_name",ty:{ty:"string"},doc:"The name of the copied VM"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"An SR to copy all the VM's disks into (if an invalid reference then it uses the existing SRs)"}],doc:"Copied the specified VM, making a new VM. Unlike clone, copy does not exploits the capabilities of the underlying storage repository in which the VM's disk images are stored. Instead, copy guarantees that the disk images of the newly created VM will be 'full disks' - i.e. not part of a CoW chain.  This function can only be called when the VM is in the Halted State."},
"VM.provision":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to be provisioned"}],doc:"Inspects the disk configuration contained within the VM's other_config, creates VDIs and VBDs and then executes any applicable post-install script."},
"VM.start":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to start"},{name:"start_paused",ty:{ty:"bool"},doc:"Instantiate VM in paused state if set to true."},{name:"force",ty:{ty:"bool"},doc:"Attempt to force the VM to start. If this flag is false then the VM may fail pre-boot safety checks (e.g. if the CPU the VM last booted on looks substantially different to the current one)"}],doc:"Start the specified VM.  This function can only be called with the VM is in the Halted State."},
"VM.start_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to start"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host on which to start the VM"},{name:"start_paused",ty:{ty:"bool"},doc:"Instantiate VM in paused state if set to true."},{name:"force",ty:{ty:"bool"},doc:"Attempt to force the VM to start. If this flag is false then the VM may fail pre-boot safety checks (e.g. if the CPU the VM last booted on looks substantially different to the current one)"}],doc:"Start the specified VM on a particular host.  This function can only be called with the VM is in the Halted State."},
"VM.pause":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to pause"}],doc:"Pause the specified VM. This can only be called when the specified VM is in the Running state."},
"VM.unpause":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to unpause"}],doc:"Resume the specified VM. This can only be called when the specified VM is in the Paused state."},
"VM.clean_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to shutdown"}],doc:"Attempt to cleanly shutdown the specified VM. (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state."},
"VM.clean_reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to shutdown"}],doc:"Attempt to cleanly shutdown the specified VM (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state."},
"VM.hard_shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to destroy"}],doc:"Stop executing the specified VM without attempting a clean shutdown."},
"VM.power_state_reset":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to reset"}],doc:"Reset the power-state of the VM to halted in the database only. (Used to recover from slave failures in pooling scenarios by resetting the power-states of VMs running on dead slaves to halted.) This is a potentially dangerous operation; use with care."},
"VM.hard_reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to reboot"}],doc:"Stop executing the specified VM without attempting a clean shutdown and immediately restart the VM."},
"VM.suspend":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to suspend"}],doc:"Suspend the specified VM to disk.  This can only be called when the specified VM is in the Running state."},
"VM.csvm":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:""}],doc:"undocumented. internal use only. This call is deprecated."},
"VM.resume":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to resume"},{name:"start_paused",ty:{ty:"bool"},doc:"Resume VM in paused state if set to true."},{name:"force",ty:{ty:"bool"},doc:"Attempt to force the VM to resume. If this flag is false then the VM may fail pre-resume safety checks (e.g. if the CPU the VM was running on looks substantially different to the current one)"}],doc:"Awaken the specified VM and resume it.  This can only be called when the specified VM is in the Suspended state."},
"VM.hard_reboot_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to reboot"}],doc:"Internal function which immediately restarts the specified VM."},
"VM.resume_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to resume"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host on which to resume the VM"},{name:"start_paused",ty:{ty:"bool"},doc:"Resume VM in paused state if set to true."},{name:"force",ty:{ty:"bool"},doc:"Attempt to force the VM to resume. If this flag is false then the VM may fail pre-resume safety checks (e.g. if the CPU the VM was running on looks substantially different to the current one)"}],doc:"Awaken the specified VM and resume it on a particular Host.  This can only be called when the specified VM is in the Suspended state."},
"VM.pool_migrate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to migrate"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The target host"},{name:"options",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Extra configuration operations"}],doc:"Migrate a VM to another Host. This can only be called when the specified VM is in the Running state."},
"VM.set_VCPUs_number_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"nvcpu",ty:{ty:"int"},doc:"The number of VCPUs"}],doc:"Set this VM's VCPUs/at_startup value, and set the same value on the VM, if running"},
"VM.add_to_VCPUs_params_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"key",ty:{ty:"string"},doc:"The key"},{name:"value",ty:{ty:"string"},doc:"The value"}],doc:"Add the given key-value pair to VM.VCPUs_params, and apply that value on the running VM"},
"VM.set_ha_restart_priority":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"string"},doc:"The value"}],doc:"Set the value of the ha_restart_priority field"},
"VM.set_ha_always_run":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"value",ty:{ty:"bool"},doc:"The value"}],doc:"Set the value of the ha_always_run"},
"VM.set_memory_target_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"target",ty:{ty:"int"},doc:"The target in bytes"}],doc:"Set the memory target for a running VM"},
"VM.wait_memory_target_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Wait for a running VM to reach its current memory target"},
"VM.set_shadow_multiplier_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"multiplier",ty:{ty:"float"},doc:"The new shadow multiplier to set"}],doc:"Set the shadow memory on a running VM with the new shadow multiplier"},
"VM.send_sysrq":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"key",ty:{ty:"string"},doc:"The key to send"}],doc:"Send the given key as a sysrq to this VM.  The key is specified as a single character (a String of length 1).  This can only be called when the specified VM is in the Running state."},
"VM.send_trigger":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"trigger",ty:{ty:"string"},doc:"The trigger to send"}],doc:"Send the named trigger to this VM.  This can only be called when the specified VM is in the Running state."},
"VM.maximise_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"total",ty:{ty:"int"},doc:"Total amount of physical RAM to fit within"},{name:"approximate",ty:{ty:"bool"},doc:"If false the limit is calculated with the guest's current exact configuration. Otherwise a more approximate calculation is performed"}],doc:"Returns the maximum amount of guest memory which will fit, together with overheads, in the supplied amount of physical memory. If 'exact' is true then an exact calculation is performed using the VM's current settings. If 'exact' is false then a more conservative approximation is used"},
"VM.migrate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"dest",ty:{ty:"string"},doc:"The destination host"},{name:"live",ty:{ty:"bool"},doc:"Live migration"},{name:"options",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Other parameters"}],doc:"Migrate the VM to another host.  This can only be called when the specified VM is in the Running state."},
"VM.get_boot_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM whose boot-time state to return"}],doc:"Returns a record describing the VM's dynamic state, initialised when the VM boots and updated to reflect runtime configuration changes e.g. CPU hotplug"},
"VM.get_data_sources":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to interrogate"}],doc:""},
"VM.record_data_source":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"data_source",ty:{ty:"string"},doc:"The data source to record"}],doc:"Start recording the specified data source"},
"VM.query_data_source":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"data_source",ty:{ty:"string"},doc:"The data source to query"}],doc:"Query the latest value of the specified data source"},
"VM.forget_data_source_archives":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"data_source",ty:{ty:"string"},doc:"The data source whose archives are to be forgotten"}],doc:"Forget the recorded statistics related to the specified data source"},
"VM.assert_operation_valid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"},{name:"op",ty:{ty:"enum",name:"vm_operations",values:["snapshot","clone","copy","provision","start","start_on","pause","unpause","clean_shutdown","clean_reboot","hard_shutdown","power_state_reset","hard_reboot","suspend","csvm","resume","resume_on","pool_migrate","migrate","get_boot_record","send_sysrq","send_trigger","changing_memory_live","awaiting_memory_live","changing_shadow_memory_live","changing_VCPUs_live","assert_operation_valid","data_source_op","update_allowed_operations","make_into_template","import","export","destroy"]},doc:"proposed operation"}],doc:"Check to see whether this operation is acceptable in the current state of the system, raising an error if the operation is invalid for some reason"},
"VM.update_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"reference to the object"}],doc:"Recomputes the list of acceptable operations"},
"VM.get_allowed_VBD_devices":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to query"}],doc:"Returns a list of the allowed values that a VBD device field can take"},
"VM.get_allowed_VIF_devices":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to query"}],doc:"Returns a list of the allowed values that a VIF device field can take"},
"VM.get_possible_hosts":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Return the list of hosts on which this VM may run."},
"VM.assert_can_boot_here":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Returns an error if the VM could not boot on this host for some reason"},
"VM.atomic_set_resident_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to set resident_on to"}],doc:""},
"VM.set_memory_static_max":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of memory_static_max"}],doc:"Set the value of the memory_static_max field"},
"VM.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vm",ty:{ty:"ref",class:"VM"},doc:"The VM"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this VM"},
"VM.assert_agile":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM"},doc:"The VM"}],doc:"Returns an error if the VM is not considered agile e.g. because it is tied to a resource local to a host"},
"VM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VMs known to the system."},
"VM.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VMs known to the system."},
"VM.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VM references to VM records for all VMs known to the system."},
"VM_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VM_metrics."},
"VM_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VM_metrics"},
"VM_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_metrics instances known to the system."},
"VM_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VM_metrics instance with the specified UUID."},
"VM_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VM_metrics"},doc:"All constructor arguments"}],doc:"Create a new VM_metrics instance, and return its handle."},
"VM_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Destroy the specified VM_metrics instance."},
"VM_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given VM_metrics."},
"VM_metrics.get_memory_actual":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the memory/actual field of the given VM_metrics."},
"VM_metrics.get_VCPUs_number":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/number field of the given VM_metrics."},
"VM_metrics.get_VCPUs_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/utilisation field of the given VM_metrics."},
"VM_metrics.get_VCPUs_CPU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/CPU field of the given VM_metrics."},
"VM_metrics.get_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/params field of the given VM_metrics."},
"VM_metrics.get_VCPUs_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the VCPUs/flags field of the given VM_metrics."},
"VM_metrics.get_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the state field of the given VM_metrics."},
"VM_metrics.get_start_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the start_time field of the given VM_metrics."},
"VM_metrics.get_install_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the install_time field of the given VM_metrics."},
"VM_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given VM_metrics."},
"VM_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given VM_metrics."},
"VM_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VM_metrics."},
"VM_metrics.set_memory_actual":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/actual field of the given VM_metrics."},
"VM_metrics.set_VCPUs_number":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the VCPUs/number field of the given VM_metrics."},
"VM_metrics.set_VCPUs_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"int"},values:{ty:"float"}},doc:"New value to set"}],doc:"Set the VCPUs/utilisation field of the given VM_metrics."},
"VM_metrics.add_to_VCPUs_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to add"},{name:"value",ty:{ty:"float"},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/utilisation field of the given VM_metrics."},
"VM_metrics.remove_from_VCPUs_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/utilisation field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
"VM_metrics.set_VCPUs_CPU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"int"},values:{ty:"int"}},doc:"New value to set"}],doc:"Set the VCPUs/CPU field of the given VM_metrics."},
"VM_metrics.add_to_VCPUs_CPU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to add"},{name:"value",ty:{ty:"int"},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/CPU field of the given VM_metrics."},
"VM_metrics.remove_from_VCPUs_CPU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/CPU field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
"VM_metrics.set_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the VCPUs/params field of the given VM_metrics."},
"VM_metrics.add_to_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/params field of the given VM_metrics."},
"VM_metrics.remove_from_VCPUs_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/params field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
"VM_metrics.set_VCPUs_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"int"},values:{ty:"set",contents:{ty:"string"}}},doc:"New value to set"}],doc:"Set the VCPUs/flags field of the given VM_metrics."},
"VM_metrics.add_to_VCPUs_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to add"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"Value to add"}],doc:"Add the given key-value pair to the VCPUs/flags field of the given VM_metrics."},
"VM_metrics.remove_from_VCPUs_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"int"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the VCPUs/flags field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
"VM_metrics.set_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the state field of the given VM_metrics."},
"VM_metrics.add_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the state field of the given VM_metrics.  If the value is already in that Set, then do nothing."},
"VM_metrics.remove_state":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the state field of the given VM_metrics.  If the value is not in that Set, then do nothing."},
"VM_metrics.set_start_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the start_time field of the given VM_metrics."},
"VM_metrics.set_install_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the install_time field of the given VM_metrics."},
"VM_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given VM_metrics."},
"VM_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VM_metrics."},
"VM_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VM_metrics."},
"VM_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VM_metrics.  If the key is not in that Map, then do nothing."},
"VM_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_metrics instances known to the system."},
"VM_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VM_metrics instances known to the system."},
"VM_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VM_metrics references to VM_metrics records for all VM_metrics instances known to the system."},
"VM_guest_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VM_guest_metrics."},
"VM_guest_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VM_guest_metrics"},
"VM_guest_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_guest_metrics instances known to the system."},
"VM_guest_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VM_guest_metrics instance with the specified UUID."},
"VM_guest_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VM_guest_metrics"},doc:"All constructor arguments"}],doc:"Create a new VM_guest_metrics instance, and return its handle."},
"VM_guest_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Destroy the specified VM_guest_metrics instance."},
"VM_guest_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given VM_guest_metrics."},
"VM_guest_metrics.get_os_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the os_version field of the given VM_guest_metrics."},
"VM_guest_metrics.get_PV_drivers_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the PV_drivers_version field of the given VM_guest_metrics."},
"VM_guest_metrics.get_PV_drivers_up_to_date":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the PV_drivers_up_to_date field of the given VM_guest_metrics."},
"VM_guest_metrics.get_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the memory field of the given VM_guest_metrics."},
"VM_guest_metrics.get_disks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the disks field of the given VM_guest_metrics."},
"VM_guest_metrics.get_networks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the networks field of the given VM_guest_metrics."},
"VM_guest_metrics.get_other":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the other field of the given VM_guest_metrics."},
"VM_guest_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given VM_guest_metrics."},
"VM_guest_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given VM_guest_metrics."},
"VM_guest_metrics.get_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"}],doc:"Get the live field of the given VM_guest_metrics."},
"VM_guest_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VM_guest_metrics."},
"VM_guest_metrics.set_os_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the os_version field of the given VM_guest_metrics."},
"VM_guest_metrics.add_to_os_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the os_version field of the given VM_guest_metrics."},
"VM_guest_metrics.remove_from_os_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the os_version field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
"VM_guest_metrics.set_PV_drivers_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the PV_drivers_version field of the given VM_guest_metrics."},
"VM_guest_metrics.add_to_PV_drivers_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the PV_drivers_version field of the given VM_guest_metrics."},
"VM_guest_metrics.remove_from_PV_drivers_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the PV_drivers_version field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
"VM_guest_metrics.set_PV_drivers_up_to_date":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the PV_drivers_up_to_date field of the given VM_guest_metrics."},
"VM_guest_metrics.set_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the memory field of the given VM_guest_metrics."},
"VM_guest_metrics.add_to_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the memory field of the given VM_guest_metrics."},
"VM_guest_metrics.remove_from_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the memory field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
"VM_guest_metrics.set_disks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the disks field of the given VM_guest_metrics."},
"VM_guest_metrics.add_to_disks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the disks field of the given VM_guest_metrics."},
"VM_guest_metrics.remove_from_disks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the disks field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
"VM_guest_metrics.set_networks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the networks field of the given VM_guest_metrics."},
"VM_guest_metrics.add_to_networks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the networks field of the given VM_guest_metrics."},
"VM_guest_metrics.remove_from_networks":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the networks field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
"VM_guest_metrics.set_other":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other field of the given VM_guest_metrics."},
"VM_guest_metrics.add_to_other":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other field of the given VM_guest_metrics."},
"VM_guest_metrics.remove_from_other":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
"VM_guest_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given VM_guest_metrics."},
"VM_guest_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VM_guest_metrics."},
"VM_guest_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VM_guest_metrics."},
"VM_guest_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing."},
"VM_guest_metrics.set_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VM_guest_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the live field of the given VM_guest_metrics."},
"VM_guest_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VM_guest_metrics instances known to the system."},
"VM_guest_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VM_guest_metrics instances known to the system."},
"VM_guest_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VM_guest_metrics references to VM_guest_metrics records for all VM_guest_metrics instances known to the system."},
"host.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host."},
"host.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host"},
"host.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the hosts known to the system."},
"host.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host instance with the specified UUID."},
"host.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host"},doc:"All constructor arguments"}],doc:"Create a new host instance, and return its handle."},
"host.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Destroy the specified host instance."},
"host.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the host instances with the given label."},
"host.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the uuid field of the given host."},
"host.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the name/label field of the given host."},
"host.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the name/description field of the given host."},
"host.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given host."},
"host.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the current_operations field of the given host."},
"host.get_API_version_major":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the API_version/major field of the given host."},
"host.get_API_version_minor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the API_version/minor field of the given host."},
"host.get_API_version_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the API_version/vendor field of the given host."},
"host.get_API_version_vendor_implementation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the API_version/vendor_implementation field of the given host."},
"host.get_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the enabled field of the given host."},
"host.get_software_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the software_version field of the given host."},
"host.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the other_config field of the given host."},
"host.get_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the capabilities field of the given host."},
"host.get_cpu_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the cpu_configuration field of the given host."},
"host.get_sched_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the sched_policy field of the given host."},
"host.get_supported_bootloaders":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the supported_bootloaders field of the given host."},
"host.get_resident_VMs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the resident_VMs field of the given host."},
"host.get_logging":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the logging field of the given host."},
"host.get_PIFs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the PIFs field of the given host."},
"host.get_suspend_image_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the suspend_image_sr field of the given host."},
"host.get_crash_dump_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the crash_dump_sr field of the given host."},
"host.get_crashdumps":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the crashdumps field of the given host."},
"host.get_patches":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the patches field of the given host."},
"host.get_PBDs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the PBDs field of the given host."},
"host.get_host_CPUs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the host_CPUs field of the given host."},
"host.get_hostname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the hostname field of the given host."},
"host.get_address":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the address field of the given host."},
"host.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the metrics field of the given host."},
"host.get_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the license_params field of the given host."},
"host.get_boot_free_mem":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the boot_free_mem field of the given host."},
"host.get_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the ha_statefiles field of the given host."},
"host.get_ha_network_peers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the ha_network_peers field of the given host."},
"host.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the blobs field of the given host."},
"host.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the tags field of the given host."},
"host.get_external_auth_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the external_auth_type field of the given host."},
"host.get_external_auth_service_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the external_auth_service_name field of the given host."},
"host.get_external_auth_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"}],doc:"Get the external_auth_configuration field of the given host."},
"host.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host."},
"host.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given host."},
"host.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given host."},
"host.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given host."},
"host.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given host.  If the value is already in that Set, then do nothing."},
"host.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given host.  If the value is not in that Set, then do nothing."},
"host.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given host."},
"host.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"host_allowed_operations",values:["provision","evacuate","shutdown","reboot","power_on","vm_start","vm_resume","vm_migrate"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given host."},
"host.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given host.  If the key is not in that Map, then do nothing."},
"host.set_API_version_major":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the API_version/major field of the given host."},
"host.set_API_version_minor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the API_version/minor field of the given host."},
"host.set_API_version_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the API_version/vendor field of the given host."},
"host.set_API_version_vendor_implementation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the API_version/vendor_implementation field of the given host."},
"host.add_to_API_version_vendor_implementation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the API_version/vendor_implementation field of the given host."},
"host.remove_from_API_version_vendor_implementation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the API_version/vendor_implementation field of the given host.  If the key is not in that Map, then do nothing."},
"host.set_enabled":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the enabled field of the given host."},
"host.set_software_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the software_version field of the given host."},
"host.add_to_software_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the software_version field of the given host."},
"host.remove_from_software_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the software_version field of the given host.  If the key is not in that Map, then do nothing."},
"host.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host."},
"host.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host."},
"host.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host.  If the key is not in that Map, then do nothing."},
"host.set_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the capabilities field of the given host."},
"host.add_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the capabilities field of the given host.  If the value is already in that Set, then do nothing."},
"host.remove_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the capabilities field of the given host.  If the value is not in that Set, then do nothing."},
"host.set_cpu_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the cpu_configuration field of the given host."},
"host.add_to_cpu_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the cpu_configuration field of the given host."},
"host.remove_from_cpu_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the cpu_configuration field of the given host.  If the key is not in that Map, then do nothing."},
"host.set_sched_policy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the sched_policy field of the given host."},
"host.set_supported_bootloaders":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the supported_bootloaders field of the given host."},
"host.add_supported_bootloaders":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the supported_bootloaders field of the given host.  If the value is already in that Set, then do nothing."},
"host.remove_supported_bootloaders":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the supported_bootloaders field of the given host.  If the value is not in that Set, then do nothing."},
"host.set_logging":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the logging field of the given host."},
"host.add_to_logging":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the logging field of the given host."},
"host.remove_from_logging":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the logging field of the given host.  If the key is not in that Map, then do nothing."},
"host.set_suspend_image_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the suspend_image_sr field of the given host."},
"host.set_crash_dump_sr":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the crash_dump_sr field of the given host."},
"host.set_hostname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the hostname field of the given host."},
"host.set_address":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the address field of the given host."},
"host.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given host."},
"host.set_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the license_params field of the given host."},
"host.add_to_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the license_params field of the given host."},
"host.remove_from_license_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the license_params field of the given host.  If the key is not in that Map, then do nothing."},
"host.set_boot_free_mem":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the boot_free_mem field of the given host."},
"host.set_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the ha_statefiles field of the given host."},
"host.add_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the ha_statefiles field of the given host.  If the value is already in that Set, then do nothing."},
"host.remove_ha_statefiles":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the ha_statefiles field of the given host.  If the value is not in that Set, then do nothing."},
"host.set_ha_network_peers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the ha_network_peers field of the given host."},
"host.add_ha_network_peers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the ha_network_peers field of the given host.  If the value is already in that Set, then do nothing."},
"host.remove_ha_network_peers":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the ha_network_peers field of the given host.  If the value is not in that Set, then do nothing."},
"host.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given host."},
"host.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given host."},
"host.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given host.  If the key is not in that Map, then do nothing."},
"host.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given host."},
"host.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given host.  If the value is already in that Set, then do nothing."},
"host.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given host.  If the value is not in that Set, then do nothing."},
"host.set_external_auth_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the external_auth_type field of the given host."},
"host.set_external_auth_service_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the external_auth_service_name field of the given host."},
"host.set_external_auth_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the external_auth_configuration field of the given host."},
"host.add_to_external_auth_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the external_auth_configuration field of the given host."},
"host.remove_from_external_auth_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the external_auth_configuration field of the given host.  If the key is not in that Map, then do nothing."},
"host.disable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to disable"}],doc:"Puts the host into a state in which no new VMs can be started. Currently active VMs on the host continue to execute."},
"host.enable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to enable"}],doc:"Puts the host into a state in which new VMs can be started."},
"host.shutdown":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to shutdown"}],doc:"Shutdown the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)"},
"host.reboot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to reboot"}],doc:"Reboot the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)"},
"host.dmesg":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to query"}],doc:"Get the host xen dmesg."},
"host.dmesg_clear":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to query"}],doc:"Get the host xen dmesg, and clear the buffer."},
"host.get_log":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to query"}],doc:"Get the host's log file"},
"host.send_debug_keys":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"keys",ty:{ty:"string"},doc:"The keys to send"}],doc:"Inject the given string as debugging keys into Xen"},
"host.bugreport_upload":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host on which to run xen-bugtool"},{name:"url",ty:{ty:"string"},doc:"The URL to upload to"},{name:"options",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Extra configuration operations"}],doc:"Run xen-bugtool --yestoall and upload the output to Citrix support"},
"host.list_methods":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"List all supported methods"},
"host.license_apply":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to upload the license to"},{name:"contents",ty:{ty:"string"},doc:"The contents of the license file, base64 encoded"}],doc:"Apply a new license to a host"},
"host.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"unique identifier/object reference"},{name:"name_label",ty:{ty:"string"},doc:"The name of the new storage repository"},{name:"name_description",ty:{ty:"string"},doc:"The description of the new storage repository"},{name:"hostname",ty:{ty:"string"},doc:"Hostname"},{name:"address",ty:{ty:"string"},doc:"An address by which this host can be contacted by other members in its pool"}],doc:"Create a new host record"},
"host.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host record to remove"}],doc:"Destroy specified host record in database"},
"host.power_on":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to power on"}],doc:"Attempt to power-on the host (if the capability exists)."},
"host.emergency_ha_disable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"This call disables HA on the local host. This should only be used with extreme care."},
"host.ha_disarm_fencing":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to disarm"}],doc:"Disarms the fencing function of the HA subsystem. This function is extremely dangerous and should only be used as part of a controlled shutdown of the HA system."},
"host.preconfigure_ha":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to modify"},{name:"statefiles",ty:{ty:"set",contents:{ty:"ref",class:"VDI"}},doc:"Set of statefile VDIs to use"},{name:"metadata_vdi",ty:{ty:"ref",class:"VDI"},doc:"VDI to use for Pool metadata"},{name:"generation",ty:{ty:"string"},doc:"UUID identifying this HA instance"}],doc:"Attach statefiles, generate config files but do not start the xHA daemon."},
"host.ha_join_liveset":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host whose HA datmon to start"}],doc:"Block until this host joins the liveset."},
"host.ha_disable_failover_decisions":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to disable failover decisions for"}],doc:"Prevents future failover decisions happening on this node. This function should only be used as part of a controlled shutdown of the HA system."},
"host.ha_wait_for_shutdown_via_statefile":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host whose HA subsystem to query"}],doc:"Block until this host xHA daemon exits after having seen the invalid statefile. If the host loses statefile access then throw an exception"},
"host.ha_stop_daemon":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host whose daemon should be stopped"}],doc:"Stops the HA daemon. This function is extremely dangerous and should only be used as part of a controlled shutdown of the HA system."},
"host.ha_release_resources":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host whose resources should be cleaned up"}],doc:"Cleans up any resources on the host associated with this HA instance."},
"host.ha_xapi_healthcheck":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Returns true if xapi appears to be functioning normally."},
"host.local_assert_healthy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Returns nothing if this host is healthy, otherwise it throws an error explaining why the host is unhealthy"},
"host.request_backup":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to send the request to"},{name:"generation",ty:{ty:"int"},doc:"The generation count of the master's database"},{name:"force",ty:{ty:"bool"},doc:"If this is true then the client _has_ to take a backup, otherwise it's just an 'offer'"}],doc:"Request this host performs a database backup"},
"host.request_config_file_sync":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host to send the request to"},{name:"hash",ty:{ty:"string"},doc:"The hash of the master's dom0 config files package"}],doc:"Request this host syncs dom0 config files"},
"host.propose_new_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"address",ty:{ty:"string"},doc:"The address of the Host which is proposed as the new master"},{name:"manual",ty:{ty:"bool"},doc:"True if this call is being invoked by the user manually, false if automatic"}],doc:"First phase of a two-phase commit protocol to set the new master. If the host has already committed to another configuration or if the proposed new master is not in this node's membership set then the call will return an exception."},
"host.commit_new_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"address",ty:{ty:"string"},doc:"The address of the Host which should be committed as the new master"}],doc:"Second phase of a two-phase commit protocol to set the new master."},
"host.abort_new_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"address",ty:{ty:"string"},doc:"The address of the Host which is proposed as the new master"}],doc:"Causes the new master transaction to abort"},
"host.get_data_sources":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to interrogate"}],doc:""},
"host.record_data_source":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"data_source",ty:{ty:"string"},doc:"The data source to record"}],doc:"Start recording the specified data source"},
"host.query_data_source":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"data_source",ty:{ty:"string"},doc:"The data source to query"}],doc:"Query the latest value of the specified data source"},
"host.forget_data_source_archives":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"data_source",ty:{ty:"string"},doc:"The data source whose archives are to be forgotten"}],doc:"Forget the recorded statistics related to the specified data source"},
"host.assert_can_evacuate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to evacuate"}],doc:"Check this host can be evacuated."},
"host.get_vms_which_prevent_evacuation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host"},doc:"The host to query"}],doc:"Return a set of VMs which prevent the host being evacuated, with per-VM error codes"},
"host.evacuate":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to evacuate"}],doc:"Disable the host and Migrate all VMs off of it, where possible."},
"host.signal_networking_change":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Signals that the management IP address or hostname has been changed beneath us."},
"host.notify":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"ty",ty:{ty:"string"},doc:"type of the notification"},{name:"params",ty:{ty:"string"},doc:"arguments of the notification (can be empty)"}],doc:"Notify an event"},
"host.syslog_reconfigure":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"Tell the host to reread its Host.logging parameters and reconfigure itself accordingly"}],doc:"Re-configure syslog logging"},
"host.management_reconfigure":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"pif",ty:{ty:"ref",class:"PIF"},doc:"reference to a PIF object corresponding to the management interface"}],doc:"Reconfigure the management network interface"},
"host.local_management_reconfigure":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"interface",ty:{ty:"string"},doc:"name of the interface to use as a management interface"}],doc:"Reconfigure the management network interface. Should only be used if Host.management_reconfigure is impossible because the network configuration is broken."},
"host.management_disable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Disable the management network interface"},
"host.get_system_status_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to interrogate"}],doc:""},
"host.get_diagnostic_timing_stats":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to interrogate"}],doc:"Return timing statistics for diagnostic purposes"},
"host.restart_agent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The Host on which you want to restart the agent"}],doc:"Restarts the agent after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called."},
"host.shutdown_agent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Shuts the agent down after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called."},
"host.set_hostname_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose host name to set"},{name:"hostname",ty:{ty:"string"},doc:"The new host name"}],doc:"Sets the host name to the specified string.  Both the API and lower-level system hostname are changed immediately."},
"host.is_in_emergency_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Diagnostics call to discover if host is in emergency mode"},
"host.compute_free_memory":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to send the request to"}],doc:"Computes the amount of free memory on the host."},
"host.tickle_heartbeat":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host calling the function, and whose heartbeat to tickle"},{name:"stuff",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Anything else we want to let the master know"}],doc:"Needs to be called every 30 seconds for the master to believe the host is alive"},
"host.sync_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to whom the data should be sent"}],doc:"This causes the synchronisation of the non-database data (messages, RRDs and so on) stored on the master to be synchronised with the host"},
"host.backup_rrds":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"Schedule a backup of the RRDs of this host"},{name:"delay",ty:{ty:"float"},doc:"Delay in seconds from when the call is received to perform the backup"}],doc:"This causes the RRDs to be backed up to the master"},
"host.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this host"},
"host.call_plugin":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"},{name:"plugin",ty:{ty:"string"},doc:"The name of the plugin"},{name:"fn",ty:{ty:"string"},doc:"The name of the function within the plugin"},{name:"args",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Arguments for the function"}],doc:"Call a XenAPI plugin on this host"},
"host.get_servertime":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose clock should be queried"}],doc:"This call queries the host's clock for the current time"},
"host.enable_binary_storage":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Enable binary storage on a particular host, for storing RRDs, messages and blobs"},
"host.disable_binary_storage":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host"}],doc:"Disable binary storage on a particular host, deleting stored RRDs, messages and blobs"},
"host.enable_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose external authentication should be enabled"},{name:"config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"A list of key-values containing the configuration data"},{name:"service_name",ty:{ty:"string"},doc:"The name of the service"},{name:"auth_type",ty:{ty:"string"},doc:"The type of authentication (e.g. AD for Active Directory)"}],doc:"This call enables external authentication on a host"},
"host.disable_external_auth":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host whose external authentication should be disabled"}],doc:"This call disables external authentication on the local host"},
"host.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the hosts known to the system."},
"host.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the hosts known to the system."},
"host.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host references to host records for all hosts known to the system."},
"host_crashdump.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host_crashdump."},
"host_crashdump.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host_crashdump"},
"host_crashdump.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_crashdumps known to the system."},
"host_crashdump.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host_crashdump instance with the specified UUID."},
"host_crashdump.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host_crashdump"},doc:"All constructor arguments"}],doc:"Create a new host_crashdump instance, and return its handle."},
"host_crashdump.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Destroy the specified host_crashdump instance."},
"host_crashdump.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the uuid field of the given host_crashdump."},
"host_crashdump.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the host field of the given host_crashdump."},
"host_crashdump.get_timestamp":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the timestamp field of the given host_crashdump."},
"host_crashdump.get_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the size field of the given host_crashdump."},
"host_crashdump.get_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the filename field of the given host_crashdump."},
"host_crashdump.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"}],doc:"Get the other_config field of the given host_crashdump."},
"host_crashdump.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host_crashdump."},
"host_crashdump.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given host_crashdump."},
"host_crashdump.set_timestamp":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the timestamp field of the given host_crashdump."},
"host_crashdump.set_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the size field of the given host_crashdump."},
"host_crashdump.set_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the filename field of the given host_crashdump."},
"host_crashdump.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host_crashdump."},
"host_crashdump.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host_crashdump."},
"host_crashdump.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host_crashdump.  If the key is not in that Map, then do nothing."},
"host_crashdump.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"The host crashdump to destroy"}],doc:"Destroy specified host crash dump, removing it from the disk."},
"host_crashdump.upload":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_crashdump"},doc:"The host crashdump to upload"},{name:"url",ty:{ty:"string"},doc:"The URL to upload to"},{name:"options",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Extra configuration operations"}],doc:"Upload the specified host crash dump to a specified URL"},
"host_crashdump.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_crashdumps known to the system."},
"host_crashdump.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the host_crashdumps known to the system."},
"host_crashdump.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host_crashdump references to host_crashdump records for all host_crashdumps known to the system."},
"host_patch.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host_patch."},
"host_patch.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host_patch"},
"host_patch.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_patchs known to the system."},
"host_patch.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host_patch instance with the specified UUID."},
"host_patch.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host_patch"},doc:"All constructor arguments"}],doc:"Create a new host_patch instance, and return its handle."},
"host_patch.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Destroy the specified host_patch instance."},
"host_patch.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the host_patch instances with the given label."},
"host_patch.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the uuid field of the given host_patch."},
"host_patch.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the name/label field of the given host_patch."},
"host_patch.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the name/description field of the given host_patch."},
"host_patch.get_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the version field of the given host_patch."},
"host_patch.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the host field of the given host_patch."},
"host_patch.get_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the filename field of the given host_patch."},
"host_patch.get_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the applied field of the given host_patch."},
"host_patch.get_timestamp_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the timestamp_applied field of the given host_patch."},
"host_patch.get_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the size field of the given host_patch."},
"host_patch.get_pool_patch":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the pool_patch field of the given host_patch."},
"host_patch.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"}],doc:"Get the other_config field of the given host_patch."},
"host_patch.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host_patch."},
"host_patch.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given host_patch."},
"host_patch.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given host_patch."},
"host_patch.set_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the version field of the given host_patch."},
"host_patch.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given host_patch."},
"host_patch.set_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the filename field of the given host_patch."},
"host_patch.set_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the applied field of the given host_patch."},
"host_patch.set_timestamp_applied":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the timestamp_applied field of the given host_patch."},
"host_patch.set_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the size field of the given host_patch."},
"host_patch.set_pool_patch":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"pool_patch"},doc:"New value to set"}],doc:"Set the pool_patch field of the given host_patch."},
"host_patch.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host_patch."},
"host_patch.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host_patch."},
"host_patch.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host_patch.  If the key is not in that Map, then do nothing."},
"host_patch.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"The patch to destroy"}],doc:"Destroy the specified host patch, removing it from the disk. This does NOT reverse the patch"},
"host_patch.apply":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_patch"},doc:"The patch to apply"}],doc:"Apply the selected patch and return its output"},
"host_patch.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_patchs known to the system."},
"host_patch.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the host_patchs known to the system."},
"host_patch.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host_patch references to host_patch records for all host_patchs known to the system."},
"host_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host_metrics."},
"host_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host_metrics"},
"host_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_metrics instances known to the system."},
"host_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host_metrics instance with the specified UUID."},
"host_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host_metrics"},doc:"All constructor arguments"}],doc:"Create a new host_metrics instance, and return its handle."},
"host_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Destroy the specified host_metrics instance."},
"host_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given host_metrics."},
"host_metrics.get_memory_total":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the memory/total field of the given host_metrics."},
"host_metrics.get_memory_free":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the memory/free field of the given host_metrics."},
"host_metrics.get_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the live field of the given host_metrics."},
"host_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given host_metrics."},
"host_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given host_metrics."},
"host_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host_metrics."},
"host_metrics.set_memory_total":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/total field of the given host_metrics."},
"host_metrics.set_memory_free":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the memory/free field of the given host_metrics."},
"host_metrics.set_live":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the live field of the given host_metrics."},
"host_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given host_metrics."},
"host_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host_metrics."},
"host_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host_metrics."},
"host_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host_metrics.  If the key is not in that Map, then do nothing."},
"host_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_metrics instances known to the system."},
"host_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the host_metrics instances known to the system."},
"host_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host_metrics references to host_metrics records for all host_metrics instances known to the system."},
"host_cpu.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given host_cpu."},
"host_cpu.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class host_cpu"},
"host_cpu.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_cpus known to the system."},
"host_cpu.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the host_cpu instance with the specified UUID."},
"host_cpu.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"host_cpu"},doc:"All constructor arguments"}],doc:"Create a new host_cpu instance, and return its handle."},
"host_cpu.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Destroy the specified host_cpu instance."},
"host_cpu.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the uuid field of the given host_cpu."},
"host_cpu.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the host field of the given host_cpu."},
"host_cpu.get_number":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the number field of the given host_cpu."},
"host_cpu.get_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the vendor field of the given host_cpu."},
"host_cpu.get_speed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the speed field of the given host_cpu."},
"host_cpu.get_modelname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the modelname field of the given host_cpu."},
"host_cpu.get_family":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the family field of the given host_cpu."},
"host_cpu.get_model":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the model field of the given host_cpu."},
"host_cpu.get_stepping":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the stepping field of the given host_cpu."},
"host_cpu.get_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the flags field of the given host_cpu."},
"host_cpu.get_features":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the features field of the given host_cpu."},
"host_cpu.get_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the utilisation field of the given host_cpu."},
"host_cpu.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"}],doc:"Get the other_config field of the given host_cpu."},
"host_cpu.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given host_cpu."},
"host_cpu.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given host_cpu."},
"host_cpu.set_number":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the number field of the given host_cpu."},
"host_cpu.set_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor field of the given host_cpu."},
"host_cpu.set_speed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the speed field of the given host_cpu."},
"host_cpu.set_modelname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the modelname field of the given host_cpu."},
"host_cpu.set_family":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the family field of the given host_cpu."},
"host_cpu.set_model":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the model field of the given host_cpu."},
"host_cpu.set_stepping":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the stepping field of the given host_cpu."},
"host_cpu.set_flags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the flags field of the given host_cpu."},
"host_cpu.set_features":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the features field of the given host_cpu."},
"host_cpu.set_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the utilisation field of the given host_cpu."},
"host_cpu.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given host_cpu."},
"host_cpu.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given host_cpu."},
"host_cpu.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"host_cpu"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given host_cpu.  If the key is not in that Map, then do nothing."},
"host_cpu.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the host_cpus known to the system."},
"host_cpu.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the host_cpus known to the system."},
"host_cpu.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of host_cpu references to host_cpu records for all host_cpus known to the system."},
"network.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given network."},
"network.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class network"},
"network.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the networks known to the system."},
"network.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the network instance with the specified UUID."},
"network.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"network"},doc:"All constructor arguments"}],doc:"Create a new network instance, and return its handle."},
"network.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Destroy the specified network instance."},
"network.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the network instances with the given label."},
"network.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the uuid field of the given network."},
"network.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the name/label field of the given network."},
"network.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the name/description field of the given network."},
"network.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given network."},
"network.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the current_operations field of the given network."},
"network.get_VIFs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the VIFs field of the given network."},
"network.get_PIFs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the PIFs field of the given network."},
"network.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the other_config field of the given network."},
"network.get_bridge":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the bridge field of the given network."},
"network.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the blobs field of the given network."},
"network.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"}],doc:"Get the tags field of the given network."},
"network.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given network."},
"network.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given network."},
"network.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given network."},
"network.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"network_operations",values:["attaching"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given network."},
"network.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"network_operations",values:["attaching"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given network.  If the value is already in that Set, then do nothing."},
"network.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"network_operations",values:["attaching"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given network.  If the value is not in that Set, then do nothing."},
"network.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"network_operations",values:["attaching"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given network."},
"network.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"network_operations",values:["attaching"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given network."},
"network.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given network.  If the key is not in that Map, then do nothing."},
"network.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given network."},
"network.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given network."},
"network.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given network.  If the key is not in that Map, then do nothing."},
"network.set_bridge":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the bridge field of the given network."},
"network.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given network."},
"network.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given network."},
"network.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given network.  If the key is not in that Map, then do nothing."},
"network.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given network."},
"network.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given network.  If the value is already in that Set, then do nothing."},
"network.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"network"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given network.  If the value is not in that Set, then do nothing."},
"network.attach":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"network",ty:{ty:"ref",class:"network"},doc:"network to which this interface should be connected"},{name:"host",ty:{ty:"ref",class:"host"},doc:"physical machine to which this PIF is connected"}],doc:"Makes the network immediately available on a particular host"},
"network.pool_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name_label",ty:{ty:"string"},doc:""},{name:"name_description",ty:{ty:"string"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""},{name:"bridge",ty:{ty:"string"},doc:""}],doc:"Create a new network record in the database only"},
"network.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"network",ty:{ty:"ref",class:"network"},doc:"The network"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this pool"},
"network.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the networks known to the system."},
"network.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the networks known to the system."},
"network.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of network references to network records for all networks known to the system."},
"VIF.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VIF."},
"VIF.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VIF"},
"VIF.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VIFs known to the system."},
"VIF.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VIF instance with the specified UUID."},
"VIF.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VIF"},doc:"All constructor arguments"}],doc:"Create a new VIF instance, and return its handle."},
"VIF.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Destroy the specified VIF instance."},
"VIF.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the uuid field of the given VIF."},
"VIF.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VIF."},
"VIF.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VIF."},
"VIF.get_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the device field of the given VIF."},
"VIF.get_network":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the network field of the given VIF."},
"VIF.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the VM field of the given VIF."},
"VIF.get_MAC":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the MAC field of the given VIF."},
"VIF.get_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the MTU field of the given VIF."},
"VIF.get_reserved":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the reserved field of the given VIF."},
"VIF.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the other_config field of the given VIF."},
"VIF.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given VIF."},
"VIF.get_status_code":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the status_code field of the given VIF."},
"VIF.get_status_detail":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the status_detail field of the given VIF."},
"VIF.get_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the runtime_properties field of the given VIF."},
"VIF.get_qos_algorithm_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the qos/algorithm_type field of the given VIF."},
"VIF.get_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the qos/algorithm_params field of the given VIF."},
"VIF.get_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the qos/supported_algorithms field of the given VIF."},
"VIF.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"}],doc:"Get the metrics field of the given VIF."},
"VIF.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VIF."},
"VIF.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VIF."},
"VIF.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VIF.  If the value is already in that Set, then do nothing."},
"VIF.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VIF.  If the value is not in that Set, then do nothing."},
"VIF.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VIF."},
"VIF.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vif_operations",values:["attach","plug","unplug"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VIF."},
"VIF.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VIF.  If the key is not in that Map, then do nothing."},
"VIF.set_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device field of the given VIF."},
"VIF.set_network":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"network"},doc:"New value to set"}],doc:"Set the network field of the given VIF."},
"VIF.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given VIF."},
"VIF.set_MAC":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the MAC field of the given VIF."},
"VIF.set_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the MTU field of the given VIF."},
"VIF.set_reserved":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the reserved field of the given VIF."},
"VIF.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VIF."},
"VIF.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VIF."},
"VIF.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VIF.  If the key is not in that Map, then do nothing."},
"VIF.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given VIF."},
"VIF.set_status_code":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the status_code field of the given VIF."},
"VIF.set_status_detail":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the status_detail field of the given VIF."},
"VIF.set_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the runtime_properties field of the given VIF."},
"VIF.add_to_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the runtime_properties field of the given VIF."},
"VIF.remove_from_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the runtime_properties field of the given VIF.  If the key is not in that Map, then do nothing."},
"VIF.set_qos_algorithm_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the qos/algorithm_type field of the given VIF."},
"VIF.set_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the qos/algorithm_params field of the given VIF."},
"VIF.add_to_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the qos/algorithm_params field of the given VIF."},
"VIF.remove_from_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the qos/algorithm_params field of the given VIF.  If the key is not in that Map, then do nothing."},
"VIF.set_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the qos/supported_algorithms field of the given VIF."},
"VIF.add_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the qos/supported_algorithms field of the given VIF.  If the value is already in that Set, then do nothing."},
"VIF.remove_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the qos/supported_algorithms field of the given VIF.  If the value is not in that Set, then do nothing."},
"VIF.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VIF_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given VIF."},
"VIF.plug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"The VIF to hotplug"}],doc:"Hotplug the specified VIF, dynamically attaching it to the running VM"},
"VIF.unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF"},doc:"The VIF to hot-unplug"}],doc:"Hot-unplug the specified VIF, dynamically unattaching it from the running VM"},
"VIF.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VIFs known to the system."},
"VIF.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VIFs known to the system."},
"VIF.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VIF references to VIF records for all VIFs known to the system."},
"VIF_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VIF_metrics."},
"VIF_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VIF_metrics"},
"VIF_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VIF_metrics instances known to the system."},
"VIF_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VIF_metrics instance with the specified UUID."},
"VIF_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VIF_metrics"},doc:"All constructor arguments"}],doc:"Create a new VIF_metrics instance, and return its handle."},
"VIF_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Destroy the specified VIF_metrics instance."},
"VIF_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given VIF_metrics."},
"VIF_metrics.get_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the io/read_kbs field of the given VIF_metrics."},
"VIF_metrics.get_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the io/write_kbs field of the given VIF_metrics."},
"VIF_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given VIF_metrics."},
"VIF_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given VIF_metrics."},
"VIF_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VIF_metrics."},
"VIF_metrics.set_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/read_kbs field of the given VIF_metrics."},
"VIF_metrics.set_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/write_kbs field of the given VIF_metrics."},
"VIF_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given VIF_metrics."},
"VIF_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VIF_metrics."},
"VIF_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VIF_metrics."},
"VIF_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VIF_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VIF_metrics.  If the key is not in that Map, then do nothing."},
"VIF_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VIF_metrics instances known to the system."},
"VIF_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VIF_metrics instances known to the system."},
"VIF_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VIF_metrics references to VIF_metrics records for all VIF_metrics instances known to the system."},
"PIF.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PIF."},
"PIF.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PIF"},
"PIF.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PIFs known to the system."},
"PIF.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PIF instance with the specified UUID."},
"PIF.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PIF"},doc:"All constructor arguments"}],doc:"Create a new PIF instance, and return its handle."},
"PIF.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Destroy the specified PIF instance."},
"PIF.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the uuid field of the given PIF."},
"PIF.get_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the device field of the given PIF."},
"PIF.get_network":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the network field of the given PIF."},
"PIF.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the host field of the given PIF."},
"PIF.get_MAC":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the MAC field of the given PIF."},
"PIF.get_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the MTU field of the given PIF."},
"PIF.get_VLAN":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the VLAN field of the given PIF."},
"PIF.get_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the device_name field of the given PIF."},
"PIF.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the metrics field of the given PIF."},
"PIF.get_physical":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the physical field of the given PIF."},
"PIF.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given PIF."},
"PIF.get_ip_configuration_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the ip_configuration_mode field of the given PIF."},
"PIF.get_IP":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the IP field of the given PIF."},
"PIF.get_netmask":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the netmask field of the given PIF."},
"PIF.get_gateway":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the gateway field of the given PIF."},
"PIF.get_DNS":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the DNS field of the given PIF."},
"PIF.get_bond_slave_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the bond_slave_of field of the given PIF."},
"PIF.get_bond_master_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the bond_master_of field of the given PIF."},
"PIF.get_VLAN_master_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the VLAN_master_of field of the given PIF."},
"PIF.get_VLAN_slave_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the VLAN_slave_of field of the given PIF."},
"PIF.get_management":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the management field of the given PIF."},
"PIF.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the other_config field of the given PIF."},
"PIF.get_disallow_unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"}],doc:"Get the disallow_unplug field of the given PIF."},
"PIF.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PIF."},
"PIF.set_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device field of the given PIF."},
"PIF.set_network":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"network"},doc:"New value to set"}],doc:"Set the network field of the given PIF."},
"PIF.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given PIF."},
"PIF.set_MAC":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the MAC field of the given PIF."},
"PIF.set_MTU":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the MTU field of the given PIF."},
"PIF.set_VLAN":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the VLAN field of the given PIF."},
"PIF.set_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_name field of the given PIF."},
"PIF.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given PIF."},
"PIF.set_physical":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the physical field of the given PIF."},
"PIF.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given PIF."},
"PIF.set_ip_configuration_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"ip_configuration_mode",values:["None","DHCP","Static"]},doc:"New value to set"}],doc:"Set the ip_configuration_mode field of the given PIF."},
"PIF.set_IP":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the IP field of the given PIF."},
"PIF.set_netmask":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the netmask field of the given PIF."},
"PIF.set_gateway":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the gateway field of the given PIF."},
"PIF.set_DNS":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the DNS field of the given PIF."},
"PIF.set_bond_slave_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"Bond"},doc:"New value to set"}],doc:"Set the bond_slave_of field of the given PIF."},
"PIF.set_VLAN_master_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VLAN"},doc:"New value to set"}],doc:"Set the VLAN_master_of field of the given PIF."},
"PIF.set_management":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the management field of the given PIF."},
"PIF.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PIF."},
"PIF.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PIF."},
"PIF.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PIF.  If the key is not in that Map, then do nothing."},
"PIF.set_disallow_unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the disallow_unplug field of the given PIF."},
"PIF.create_VLAN":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"device",ty:{ty:"string"},doc:"physical interface on which to create the VLAN interface"},{name:"network",ty:{ty:"ref",class:"network"},doc:"network to which this interface should be connected"},{name:"host",ty:{ty:"ref",class:"host"},doc:"physical machine to which this PIF is connected"},{name:"VLAN",ty:{ty:"int"},doc:"VLAN tag for the new interface"}],doc:"Create a VLAN interface from an existing physical interface. This call is deprecated: use VLAN.create instead"},
"PIF.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"the PIF object to destroy"}],doc:"Destroy the PIF object (provided it is a VLAN interface). This call is deprecated: use VLAN.destroy or Bond.destroy instead"},
"PIF.reconfigure_ip":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"the PIF object to reconfigure"},{name:"mode",ty:{ty:"enum",name:"ip_configuration_mode",values:["None","DHCP","Static"]},doc:"whether to use dynamic/static/no-assignment"},{name:"IP",ty:{ty:"string"},doc:"the new IP address"},{name:"netmask",ty:{ty:"string"},doc:"the new netmask"},{name:"gateway",ty:{ty:"string"},doc:"the new gateway"},{name:"DNS",ty:{ty:"string"},doc:"the new DNS settings"}],doc:"Reconfigure the IP address settings for this interface"},
"PIF.scan":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host on which to scan"}],doc:"Scan for physical interfaces on a host and create PIF objects to represent them"},
"PIF.introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host on which the interface exists"},{name:"MAC",ty:{ty:"string"},doc:"The MAC address of the interface"},{name:"device",ty:{ty:"string"},doc:"The device name to use for the interface"}],doc:"Create a PIF object matching a particular network interface"},
"PIF.forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"The PIF object to destroy"}],doc:"Destroy the PIF object matching a particular network interface"},
"PIF.unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"the PIF object to unplug"}],doc:"Attempt to bring down a physical interface"},
"PIF.plug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"the PIF object to plug"}],doc:"Attempt to bring up a physical interface"},
"PIF.pool_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"device",ty:{ty:"string"},doc:""},{name:"network",ty:{ty:"ref",class:"network"},doc:""},{name:"host",ty:{ty:"ref",class:"host"},doc:""},{name:"MAC",ty:{ty:"string"},doc:""},{name:"MTU",ty:{ty:"int"},doc:""},{name:"VLAN",ty:{ty:"int"},doc:""},{name:"physical",ty:{ty:"bool"},doc:""},{name:"ip_configuration_mode",ty:{ty:"enum",name:"ip_configuration_mode",values:["None","DHCP","Static"]},doc:""},{name:"IP",ty:{ty:"string"},doc:""},{name:"netmask",ty:{ty:"string"},doc:""},{name:"gateway",ty:{ty:"string"},doc:""},{name:"DNS",ty:{ty:"string"},doc:""},{name:"bond_slave_of",ty:{ty:"ref",class:"Bond"},doc:""},{name:"VLAN_master_of",ty:{ty:"ref",class:"VLAN"},doc:""},{name:"management",ty:{ty:"bool"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""},{name:"disallow_unplug",ty:{ty:"bool"},doc:""}],doc:"Create a new PIF record in the database only"},
"PIF.db_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"device",ty:{ty:"string"},doc:""},{name:"network",ty:{ty:"ref",class:"network"},doc:""},{name:"host",ty:{ty:"ref",class:"host"},doc:""},{name:"MAC",ty:{ty:"string"},doc:""},{name:"MTU",ty:{ty:"int"},doc:""},{name:"VLAN",ty:{ty:"int"},doc:""},{name:"physical",ty:{ty:"bool"},doc:""},{name:"ip_configuration_mode",ty:{ty:"enum",name:"ip_configuration_mode",values:["None","DHCP","Static"]},doc:""},{name:"IP",ty:{ty:"string"},doc:""},{name:"netmask",ty:{ty:"string"},doc:""},{name:"gateway",ty:{ty:"string"},doc:""},{name:"DNS",ty:{ty:"string"},doc:""},{name:"bond_slave_of",ty:{ty:"ref",class:"Bond"},doc:""},{name:"VLAN_master_of",ty:{ty:"ref",class:"VLAN"},doc:""},{name:"management",ty:{ty:"bool"},doc:""},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:""},{name:"disallow_unplug",ty:{ty:"bool"},doc:""}],doc:"Create a new PIF record in the database only"},
"PIF.db_forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF"},doc:"The ref of the PIF whose database record should be destroyed"}],doc:"Destroy a PIF database record."},
"PIF.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PIFs known to the system."},
"PIF.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PIFs known to the system."},
"PIF.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PIF references to PIF records for all PIFs known to the system."},
"PIF_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PIF_metrics."},
"PIF_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PIF_metrics"},
"PIF_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PIF_metrics instances known to the system."},
"PIF_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PIF_metrics instance with the specified UUID."},
"PIF_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PIF_metrics"},doc:"All constructor arguments"}],doc:"Create a new PIF_metrics instance, and return its handle."},
"PIF_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Destroy the specified PIF_metrics instance."},
"PIF_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given PIF_metrics."},
"PIF_metrics.get_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the io/read_kbs field of the given PIF_metrics."},
"PIF_metrics.get_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the io/write_kbs field of the given PIF_metrics."},
"PIF_metrics.get_carrier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the carrier field of the given PIF_metrics."},
"PIF_metrics.get_vendor_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the vendor_id field of the given PIF_metrics."},
"PIF_metrics.get_vendor_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the vendor_name field of the given PIF_metrics."},
"PIF_metrics.get_device_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the device_id field of the given PIF_metrics."},
"PIF_metrics.get_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the device_name field of the given PIF_metrics."},
"PIF_metrics.get_speed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the speed field of the given PIF_metrics."},
"PIF_metrics.get_duplex":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the duplex field of the given PIF_metrics."},
"PIF_metrics.get_pci_bus_path":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the pci_bus_path field of the given PIF_metrics."},
"PIF_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given PIF_metrics."},
"PIF_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given PIF_metrics."},
"PIF_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PIF_metrics."},
"PIF_metrics.set_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/read_kbs field of the given PIF_metrics."},
"PIF_metrics.set_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/write_kbs field of the given PIF_metrics."},
"PIF_metrics.set_carrier":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the carrier field of the given PIF_metrics."},
"PIF_metrics.set_vendor_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor_id field of the given PIF_metrics."},
"PIF_metrics.set_vendor_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor_name field of the given PIF_metrics."},
"PIF_metrics.set_device_id":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_id field of the given PIF_metrics."},
"PIF_metrics.set_device_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device_name field of the given PIF_metrics."},
"PIF_metrics.set_speed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the speed field of the given PIF_metrics."},
"PIF_metrics.set_duplex":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the duplex field of the given PIF_metrics."},
"PIF_metrics.set_pci_bus_path":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the pci_bus_path field of the given PIF_metrics."},
"PIF_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given PIF_metrics."},
"PIF_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PIF_metrics."},
"PIF_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PIF_metrics."},
"PIF_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PIF_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PIF_metrics.  If the key is not in that Map, then do nothing."},
"PIF_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PIF_metrics instances known to the system."},
"PIF_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PIF_metrics instances known to the system."},
"PIF_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PIF_metrics references to PIF_metrics records for all PIF_metrics instances known to the system."},
"Bond.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given Bond."},
"Bond.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class Bond"},
"Bond.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the Bonds known to the system."},
"Bond.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the Bond instance with the specified UUID."},
"Bond.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"Bond"},doc:"All constructor arguments"}],doc:"Create a new Bond instance, and return its handle."},
"Bond.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Destroy the specified Bond instance."},
"Bond.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the uuid field of the given Bond."},
"Bond.get_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the master field of the given Bond."},
"Bond.get_slaves":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the slaves field of the given Bond."},
"Bond.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"}],doc:"Get the other_config field of the given Bond."},
"Bond.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given Bond."},
"Bond.set_master":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the master field of the given Bond."},
"Bond.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given Bond."},
"Bond.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given Bond."},
"Bond.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given Bond.  If the key is not in that Map, then do nothing."},
"Bond.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"network",ty:{ty:"ref",class:"network"},doc:"Network to add the bonded PIF to"},{name:"members",ty:{ty:"set",contents:{ty:"ref",class:"PIF"}},doc:"PIFs to add to this bond"},{name:"MAC",ty:{ty:"string"},doc:"The MAC address to use on the bond itself. If this parameter is the empty string then the bond will inherit its MAC address from the first of the specified 'members'"}],doc:"Create an interface bond"},
"Bond.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"Bond"},doc:"Bond to destroy"}],doc:"Destroy an interface bond"},
"Bond.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the Bonds known to the system."},
"Bond.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the Bonds known to the system."},
"Bond.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of Bond references to Bond records for all Bonds known to the system."},
"VLAN.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VLAN."},
"VLAN.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VLAN"},
"VLAN.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VLANs known to the system."},
"VLAN.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VLAN instance with the specified UUID."},
"VLAN.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VLAN"},doc:"All constructor arguments"}],doc:"Create a new VLAN instance, and return its handle."},
"VLAN.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Destroy the specified VLAN instance."},
"VLAN.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the uuid field of the given VLAN."},
"VLAN.get_tagged_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the tagged_PIF field of the given VLAN."},
"VLAN.get_untagged_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the untagged_PIF field of the given VLAN."},
"VLAN.get_tag":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the tag field of the given VLAN."},
"VLAN.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"}],doc:"Get the other_config field of the given VLAN."},
"VLAN.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VLAN."},
"VLAN.set_tagged_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the tagged_PIF field of the given VLAN."},
"VLAN.set_untagged_PIF":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"PIF"},doc:"New value to set"}],doc:"Set the untagged_PIF field of the given VLAN."},
"VLAN.set_tag":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the tag field of the given VLAN."},
"VLAN.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VLAN."},
"VLAN.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VLAN."},
"VLAN.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VLAN.  If the key is not in that Map, then do nothing."},
"VLAN.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"tagged_PIF",ty:{ty:"ref",class:"PIF"},doc:"PIF which receives the tagged traffic"},{name:"tag",ty:{ty:"int"},doc:"VLAN tag in use"},{name:"network",ty:{ty:"ref",class:"network"},doc:"Network to receive the untagged traffic"}],doc:"Create a VLAN mux/demuxer"},
"VLAN.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VLAN"},doc:"VLAN mux/demuxer to destroy"}],doc:"Destroy a VLAN mux/demuxer"},
"VLAN.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VLANs known to the system."},
"VLAN.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VLANs known to the system."},
"VLAN.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VLAN references to VLAN records for all VLANs known to the system."},
"SM.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given SM."},
"SM.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class SM"},
"SM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the SMs known to the system."},
"SM.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the SM instance with the specified UUID."},
"SM.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"SM"},doc:"All constructor arguments"}],doc:"Create a new SM instance, and return its handle."},
"SM.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Destroy the specified SM instance."},
"SM.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the SM instances with the given label."},
"SM.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the uuid field of the given SM."},
"SM.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the name/label field of the given SM."},
"SM.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the name/description field of the given SM."},
"SM.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the type field of the given SM."},
"SM.get_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the vendor field of the given SM."},
"SM.get_copyright":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the copyright field of the given SM."},
"SM.get_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the version field of the given SM."},
"SM.get_required_api_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the required_api_version field of the given SM."},
"SM.get_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the configuration field of the given SM."},
"SM.get_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the capabilities field of the given SM."},
"SM.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the other_config field of the given SM."},
"SM.get_driver_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"}],doc:"Get the driver_filename field of the given SM."},
"SM.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given SM."},
"SM.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given SM."},
"SM.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given SM."},
"SM.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the type field of the given SM."},
"SM.set_vendor":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the vendor field of the given SM."},
"SM.set_copyright":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the copyright field of the given SM."},
"SM.set_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the version field of the given SM."},
"SM.set_required_api_version":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the required_api_version field of the given SM."},
"SM.set_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the configuration field of the given SM."},
"SM.add_to_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the configuration field of the given SM."},
"SM.remove_from_configuration":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the configuration field of the given SM.  If the key is not in that Map, then do nothing."},
"SM.set_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the capabilities field of the given SM."},
"SM.add_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the capabilities field of the given SM.  If the value is already in that Set, then do nothing."},
"SM.remove_capabilities":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the capabilities field of the given SM.  If the value is not in that Set, then do nothing."},
"SM.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given SM."},
"SM.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given SM."},
"SM.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given SM.  If the key is not in that Map, then do nothing."},
"SM.set_driver_filename":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the driver_filename field of the given SM."},
"SM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the SMs known to the system."},
"SM.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the SMs known to the system."},
"SM.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of SM references to SM records for all SMs known to the system."},
"SR.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given SR."},
"SR.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class SR"},
"SR.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the SRs known to the system."},
"SR.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the SR instance with the specified UUID."},
"SR.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"SR"},doc:"All constructor arguments"}],doc:"Create a new SR instance, and return its handle."},
"SR.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Destroy the specified SR instance."},
"SR.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the SR instances with the given label."},
"SR.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the uuid field of the given SR."},
"SR.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the name/label field of the given SR."},
"SR.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the name/description field of the given SR."},
"SR.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given SR."},
"SR.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the current_operations field of the given SR."},
"SR.get_VDIs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the VDIs field of the given SR."},
"SR.get_PBDs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the PBDs field of the given SR."},
"SR.get_virtual_allocation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the virtual_allocation field of the given SR."},
"SR.get_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the physical_utilisation field of the given SR."},
"SR.get_physical_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the physical_size field of the given SR."},
"SR.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the type field of the given SR."},
"SR.get_content_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the content_type field of the given SR."},
"SR.get_shared":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the shared field of the given SR."},
"SR.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the other_config field of the given SR."},
"SR.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the tags field of the given SR."},
"SR.get_default_vdi_visibility":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the default_vdi_visibility field of the given SR."},
"SR.get_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the sm_config field of the given SR."},
"SR.get_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"}],doc:"Get the blobs field of the given SR."},
"SR.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given SR."},
"SR.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given SR."},
"SR.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given SR."},
"SR.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given SR."},
"SR.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given SR.  If the value is already in that Set, then do nothing."},
"SR.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given SR.  If the value is not in that Set, then do nothing."},
"SR.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given SR."},
"SR.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"storage_operations",values:["scan","destroy","forget","plug","unplug","update","vdi_create","vdi_introduce","vdi_destroy","vdi_resize","vdi_clone","vdi_snapshot"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given SR."},
"SR.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given SR.  If the key is not in that Map, then do nothing."},
"SR.set_virtual_allocation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the virtual_allocation field of the given SR."},
"SR.set_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the physical_utilisation field of the given SR."},
"SR.set_physical_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the physical_size field of the given SR."},
"SR.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the type field of the given SR."},
"SR.set_content_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the content_type field of the given SR."},
"SR.set_shared":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the shared field of the given SR."},
"SR.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given SR."},
"SR.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given SR."},
"SR.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given SR.  If the key is not in that Map, then do nothing."},
"SR.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given SR."},
"SR.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given SR.  If the value is already in that Set, then do nothing."},
"SR.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given SR.  If the value is not in that Set, then do nothing."},
"SR.set_default_vdi_visibility":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the default_vdi_visibility field of the given SR."},
"SR.set_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the sm_config field of the given SR."},
"SR.add_to_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the sm_config field of the given SR."},
"SR.remove_from_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the sm_config field of the given SR.  If the key is not in that Map, then do nothing."},
"SR.set_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"ref",class:"blob"}},doc:"New value to set"}],doc:"Set the blobs field of the given SR."},
"SR.add_to_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"ref",class:"blob"},doc:"Value to add"}],doc:"Add the given key-value pair to the blobs field of the given SR."},
"SR.remove_from_blobs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the blobs field of the given SR.  If the key is not in that Map, then do nothing."},
"SR.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to create/make the SR on"},{name:"device_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The device config string that will be passed to backend SR driver"},{name:"physical_size",ty:{ty:"int"},doc:"The physical size of the new storage repository"},{name:"name_label",ty:{ty:"string"},doc:"The name of the new storage repository"},{name:"name_description",ty:{ty:"string"},doc:"The description of the new storage repository"},{name:"type",ty:{ty:"string"},doc:"The type of the SR; used to specify the SR backend driver to use"},{name:"content_type",ty:{ty:"string"},doc:"The type of the new SRs content, if required (e.g. ISOs)"},{name:"shared",ty:{ty:"bool"},doc:"True if the SR (is capable of) being shared by multiple hosts"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage backend specific configuration options"}],doc:"Create a new Storage Repository and introduce it into the managed system, creating both SR record and PBD record to attach it to current host (with specified device_config parameters)"},
"SR.introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid assigned to the introduced SR"},{name:"name_label",ty:{ty:"string"},doc:"The name of the new storage repository"},{name:"name_description",ty:{ty:"string"},doc:"The description of the new storage repository"},{name:"type",ty:{ty:"string"},doc:"The type of the SR; used to specify the SR backend driver to use"},{name:"content_type",ty:{ty:"string"},doc:"The type of the new SRs content, if required (e.g. ISOs)"},{name:"shared",ty:{ty:"bool"},doc:"True if the SR (is capable of) being shared by multiple hosts"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage backend specific configuration options"}],doc:"Introduce a new Storage Repository into the managed system"},
"SR.make":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to create/make the SR on"},{name:"device_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The device config string that will be passed to backend SR driver"},{name:"physical_size",ty:{ty:"int"},doc:"The physical size of the new storage repository"},{name:"name_label",ty:{ty:"string"},doc:"The name of the new storage repository"},{name:"name_description",ty:{ty:"string"},doc:"The description of the new storage repository"},{name:"type",ty:{ty:"string"},doc:"The type of the SR; used to specify the SR backend driver to use"},{name:"content_type",ty:{ty:"string"},doc:"The type of the new SRs content, if required (e.g. ISOs)"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage backend specific configuration options"}],doc:"Create a new Storage Repository on disk. This call is deprecated: use SR.create instead."},
"SR.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to destroy"}],doc:"Destroy specified SR, removing SR-record from database and remove SR from disk. (In order to affect this operation the appropriate device_config is read from the specified SR's PBD on current host)"},
"SR.forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to destroy"}],doc:"Removing specified SR-record from database, without attempting to remove SR from disk"},
"SR.update":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR whose fields should be refreshed"}],doc:"Refresh the fields on the SR object"},
"SR.get_supported_types":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a set of all the SR types supported by the system"},
"SR.scan":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to scan"}],doc:"Refreshes the list of VDIs associated with an SR"},
"SR.probe":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host to create/make the SR on"},{name:"device_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The device config string that will be passed to backend SR driver"},{name:"type",ty:{ty:"string"},doc:"The type of the SR; used to specify the SR backend driver to use"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage backend specific configuration options"}],doc:"Perform a backend-specific scan, using the given device_config.  If the device_config is complete, then this will return a list of the SRs present of this type on the device, if any.  If the device_config is partial, then a backend-specific scan will be performed, returning results that will guide the user in improving the device_config."},
"SR.set_shared":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR"},{name:"value",ty:{ty:"bool"},doc:"True if the SR is shared"}],doc:"Sets the shared flag on the SR"},
"SR.create_new_blob":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR"},{name:"name",ty:{ty:"string"},doc:"The name associated with the blob"},{name:"mime_type",ty:{ty:"string"},doc:"The mime type for the data. Empty string translates to application/octet-stream"}],doc:"Create a placeholder for a named binary blob of data that is associated with this SR"},
"SR.set_physical_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"The SR to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the SR's physical_size"}],doc:"Sets the SR's physical_size field"},
"SR.set_virtual_allocation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"The SR to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the SR's virtual_allocation"}],doc:"Sets the SR's virtual_allocation field"},
"SR.set_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"SR"},doc:"The SR to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the SR's physical utilisation"}],doc:"Sets the SR's physical_utilisation field"},
"SR.assert_can_host_ha_statefile":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The SR to query"}],doc:"Returns successfully if the given SR can host an HA statefile. Otherwise returns an error to explain why not"},
"SR.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the SRs known to the system."},
"SR.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the SRs known to the system."},
"SR.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of SR references to SR records for all SRs known to the system."},
"VDI.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VDI."},
"VDI.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VDI"},
"VDI.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VDIs known to the system."},
"VDI.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VDI instance with the specified UUID."},
"VDI.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VDI"},doc:"All constructor arguments"}],doc:"Create a new VDI instance, and return its handle."},
"VDI.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Destroy the specified VDI instance."},
"VDI.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the VDI instances with the given label."},
"VDI.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the uuid field of the given VDI."},
"VDI.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the name/label field of the given VDI."},
"VDI.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the name/description field of the given VDI."},
"VDI.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VDI."},
"VDI.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VDI."},
"VDI.get_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the SR field of the given VDI."},
"VDI.get_VBDs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the VBDs field of the given VDI."},
"VDI.get_crash_dumps":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the crash_dumps field of the given VDI."},
"VDI.get_virtual_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the virtual_size field of the given VDI."},
"VDI.get_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the physical_utilisation field of the given VDI."},
"VDI.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the type field of the given VDI."},
"VDI.get_sharable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the sharable field of the given VDI."},
"VDI.get_read_only":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the read_only field of the given VDI."},
"VDI.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the other_config field of the given VDI."},
"VDI.get_storage_lock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the storage_lock field of the given VDI."},
"VDI.get_location":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the location field of the given VDI."},
"VDI.get_managed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the managed field of the given VDI."},
"VDI.get_missing":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the missing field of the given VDI."},
"VDI.get_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the parent field of the given VDI."},
"VDI.get_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the xenstore_data field of the given VDI."},
"VDI.get_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the sm_config field of the given VDI."},
"VDI.get_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the is_a_snapshot field of the given VDI."},
"VDI.get_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the snapshot_of field of the given VDI."},
"VDI.get_snapshots":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the snapshots field of the given VDI."},
"VDI.get_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the snapshot_time field of the given VDI."},
"VDI.get_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"}],doc:"Get the tags field of the given VDI."},
"VDI.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VDI."},
"VDI.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given VDI."},
"VDI.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given VDI."},
"VDI.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VDI."},
"VDI.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VDI.  If the value is already in that Set, then do nothing."},
"VDI.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VDI.  If the value is not in that Set, then do nothing."},
"VDI.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VDI."},
"VDI.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vdi_operations",values:["scan","clone","copy","resize","resize_online","snapshot","destroy","forget","update","force_unlock","generate_config"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VDI."},
"VDI.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VDI.  If the key is not in that Map, then do nothing."},
"VDI.set_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the SR field of the given VDI."},
"VDI.set_virtual_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the virtual_size field of the given VDI."},
"VDI.set_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the physical_utilisation field of the given VDI."},
"VDI.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vdi_type",values:["system","user","ephemeral","suspend","crashdump","ha_statefile","metadata"]},doc:"New value to set"}],doc:"Set the type field of the given VDI."},
"VDI.set_sharable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the sharable field of the given VDI."},
"VDI.set_read_only":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the read_only field of the given VDI."},
"VDI.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VDI."},
"VDI.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VDI."},
"VDI.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VDI.  If the key is not in that Map, then do nothing."},
"VDI.set_storage_lock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the storage_lock field of the given VDI."},
"VDI.set_location":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the location field of the given VDI."},
"VDI.set_managed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the managed field of the given VDI."},
"VDI.set_missing":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the missing field of the given VDI."},
"VDI.set_parent":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the parent field of the given VDI."},
"VDI.set_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the xenstore_data field of the given VDI."},
"VDI.add_to_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the xenstore_data field of the given VDI."},
"VDI.remove_from_xenstore_data":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the xenstore_data field of the given VDI.  If the key is not in that Map, then do nothing."},
"VDI.set_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the sm_config field of the given VDI."},
"VDI.add_to_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the sm_config field of the given VDI."},
"VDI.remove_from_sm_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the sm_config field of the given VDI.  If the key is not in that Map, then do nothing."},
"VDI.set_is_a_snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the is_a_snapshot field of the given VDI."},
"VDI.set_snapshot_of":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the snapshot_of field of the given VDI."},
"VDI.set_snapshot_time":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the snapshot_time field of the given VDI."},
"VDI.set_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the tags field of the given VDI."},
"VDI.add_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the tags field of the given VDI.  If the value is already in that Set, then do nothing."},
"VDI.remove_tags":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the tags field of the given VDI.  If the value is not in that Set, then do nothing."},
"VDI.snapshot":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to snapshot"},{name:"driver_params",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Optional parameters that can be passed through to backend driver in order to specify storage-type-specific snapshot options"}],doc:"Take a read-only snapshot of the VDI, returning a reference to the snapshot. If any driver_params are specified then these are passed through to the storage-specific substrate driver that takes the snapshot. NB the snapshot lives in the same Storage Repository as its parent."},
"VDI.clone":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to clone"},{name:"driver_params",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Optional parameters that are passed through to the backend driver in order to specify storage-type-specific clone options"}],doc:"Take an exact copy of the VDI and return a reference to the new disk. If any driver_params are specified then these are passed through to the storage-specific substrate driver that implements the clone operation. NB the clone lives in the same Storage Repository as its parent."},
"VDI.resize":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to resize"},{name:"size",ty:{ty:"int"},doc:"The new size of the VDI"}],doc:"Resize the VDI."},
"VDI.resize_online":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to resize"},{name:"size",ty:{ty:"int"},doc:"The new size of the VDI"}],doc:"Resize the VDI which may or may not be attached to running guests."},
"VDI.introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid of the disk to introduce"},{name:"name_label",ty:{ty:"string"},doc:"The name of the disk record"},{name:"name_description",ty:{ty:"string"},doc:"The description of the disk record"},{name:"SR",ty:{ty:"ref",class:"SR"},doc:"The SR that the VDI is in"},{name:"type",ty:{ty:"enum",name:"vdi_type",values:["system","user","ephemeral","suspend","crashdump","ha_statefile","metadata"]},doc:"The type of the VDI"},{name:"sharable",ty:{ty:"bool"},doc:"true if this disk may be shared"},{name:"read_only",ty:{ty:"bool"},doc:"true if this disk may ONLY be mounted read-only"},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"additional configuration"},{name:"location",ty:{ty:"string"},doc:"location information"},{name:"xenstore_data",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Data to insert into xenstore"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage-specific config"}],doc:"Create a new VDI record in the database only"},
"VDI.pool_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid of the disk to introduce"},{name:"name_label",ty:{ty:"string"},doc:"The name of the disk record"},{name:"name_description",ty:{ty:"string"},doc:"The description of the disk record"},{name:"SR",ty:{ty:"ref",class:"SR"},doc:"The SR that the VDI is in"},{name:"type",ty:{ty:"enum",name:"vdi_type",values:["system","user","ephemeral","suspend","crashdump","ha_statefile","metadata"]},doc:"The type of the VDI"},{name:"sharable",ty:{ty:"bool"},doc:"true if this disk may be shared"},{name:"read_only",ty:{ty:"bool"},doc:"true if this disk may ONLY be mounted read-only"},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"additional configuration"},{name:"location",ty:{ty:"string"},doc:"location information"},{name:"xenstore_data",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Data to insert into xenstore"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage-specific config"}],doc:"Create a new VDI record in the database only"},
"VDI.db_introduce":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid of the disk to introduce"},{name:"name_label",ty:{ty:"string"},doc:"The name of the disk record"},{name:"name_description",ty:{ty:"string"},doc:"The description of the disk record"},{name:"SR",ty:{ty:"ref",class:"SR"},doc:"The SR that the VDI is in"},{name:"type",ty:{ty:"enum",name:"vdi_type",values:["system","user","ephemeral","suspend","crashdump","ha_statefile","metadata"]},doc:"The type of the VDI"},{name:"sharable",ty:{ty:"bool"},doc:"true if this disk may be shared"},{name:"read_only",ty:{ty:"bool"},doc:"true if this disk may ONLY be mounted read-only"},{name:"other_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"additional configuration"},{name:"location",ty:{ty:"string"},doc:"location information"},{name:"xenstore_data",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Data to insert into xenstore"},{name:"sm_config",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"Storage-specific config"}],doc:"Create a new VDI record in the database only"},
"VDI.db_forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to forget about"}],doc:"Removes a VDI record from the database"},
"VDI.update":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI whose stats (eg size) should be updated"}],doc:"Ask the storage backend to refresh the fields in the VDI object"},
"VDI.copy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to copy"},{name:"sr",ty:{ty:"ref",class:"SR"},doc:"The destination SR"}],doc:"Make a fresh VDI in the specified SR and copy the supplied VDI's data to the new disk"},
"VDI.force_unlock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to forcibly unlock"}],doc:"Steals the lock on this VDI and leaves it unlocked. This function is extremely dangerous. This call is deprecated."},
"VDI.set_managed":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value of the VDI's managed field"}],doc:"Sets the VDI's managed field"},
"VDI.forget":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to forget about"}],doc:"Removes a VDI record from the database"},
"VDI.set_read_only":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value of the VDI's read_only field"}],doc:"Sets the VDI's read_only field"},
"VDI.set_missing":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"bool"},doc:"The new value of the VDI's missing field"}],doc:"Sets the VDI's missing field"},
"VDI.set_virtual_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the VDI's virtual size"}],doc:"Sets the VDI's virtual_size field"},
"VDI.set_physical_utilisation":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VDI"},doc:"The VDI to modify"},{name:"value",ty:{ty:"int"},doc:"The new value of the VDI's physical utilisation"}],doc:"Sets the VDI's physical_utilisation field"},
"VDI.generate_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"host",ty:{ty:"ref",class:"host"},doc:"The host on which to generate the configuration"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The VDI to generate the configuration for"}],doc:"Internal function for debugging only"},
"VDI.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VDIs known to the system."},
"VDI.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VDIs known to the system."},
"VDI.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VDI references to VDI records for all VDIs known to the system."},
"VBD.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VBD."},
"VBD.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VBD"},
"VBD.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VBDs known to the system."},
"VBD.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VBD instance with the specified UUID."},
"VBD.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VBD"},doc:"All constructor arguments"}],doc:"Create a new VBD instance, and return its handle."},
"VBD.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Destroy the specified VBD instance."},
"VBD.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the uuid field of the given VBD."},
"VBD.get_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the allowed_operations field of the given VBD."},
"VBD.get_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the current_operations field of the given VBD."},
"VBD.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the VM field of the given VBD."},
"VBD.get_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the VDI field of the given VBD."},
"VBD.get_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the device field of the given VBD."},
"VBD.get_userdevice":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the userdevice field of the given VBD."},
"VBD.get_bootable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the bootable field of the given VBD."},
"VBD.get_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the mode field of the given VBD."},
"VBD.get_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the type field of the given VBD."},
"VBD.get_unpluggable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the unpluggable field of the given VBD."},
"VBD.get_storage_lock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the storage_lock field of the given VBD."},
"VBD.get_empty":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the empty field of the given VBD."},
"VBD.get_reserved":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the reserved field of the given VBD."},
"VBD.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the other_config field of the given VBD."},
"VBD.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given VBD."},
"VBD.get_status_code":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the status_code field of the given VBD."},
"VBD.get_status_detail":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the status_detail field of the given VBD."},
"VBD.get_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the runtime_properties field of the given VBD."},
"VBD.get_qos_algorithm_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the qos/algorithm_type field of the given VBD."},
"VBD.get_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the qos/algorithm_params field of the given VBD."},
"VBD.get_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the qos/supported_algorithms field of the given VBD."},
"VBD.get_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"}],doc:"Get the metrics field of the given VBD."},
"VBD.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VBD."},
"VBD.set_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]}},doc:"New value to set"}],doc:"Set the allowed_operations field of the given VBD."},
"VBD.add_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]},doc:"New value to add"}],doc:"Add the given value to the allowed_operations field of the given VBD.  If the value is already in that Set, then do nothing."},
"VBD.remove_allowed_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]},doc:"Value to remove"}],doc:"Remove the given value from the allowed_operations field of the given VBD.  If the value is not in that Set, then do nothing."},
"VBD.set_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]}},doc:"New value to set"}],doc:"Set the current_operations field of the given VBD."},
"VBD.add_to_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"enum",name:"vbd_operations",values:["attach","eject","insert","plug","unplug","unplug_force","pause","unpause"]},doc:"Value to add"}],doc:"Add the given key-value pair to the current_operations field of the given VBD."},
"VBD.remove_from_current_operations":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the current_operations field of the given VBD.  If the key is not in that Map, then do nothing."},
"VBD.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given VBD."},
"VBD.set_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the VDI field of the given VBD."},
"VBD.set_device":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the device field of the given VBD."},
"VBD.set_userdevice":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the userdevice field of the given VBD."},
"VBD.set_bootable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the bootable field of the given VBD."},
"VBD.set_mode":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vbd_mode",values:["RO","RW"]},doc:"New value to set"}],doc:"Set the mode field of the given VBD."},
"VBD.set_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"vbd_type",values:["CD","Disk"]},doc:"New value to set"}],doc:"Set the type field of the given VBD."},
"VBD.set_unpluggable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the unpluggable field of the given VBD."},
"VBD.set_storage_lock":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the storage_lock field of the given VBD."},
"VBD.set_empty":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the empty field of the given VBD."},
"VBD.set_reserved":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the reserved field of the given VBD."},
"VBD.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VBD."},
"VBD.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VBD."},
"VBD.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VBD.  If the key is not in that Map, then do nothing."},
"VBD.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given VBD."},
"VBD.set_status_code":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the status_code field of the given VBD."},
"VBD.set_status_detail":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the status_detail field of the given VBD."},
"VBD.set_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the runtime_properties field of the given VBD."},
"VBD.add_to_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the runtime_properties field of the given VBD."},
"VBD.remove_from_runtime_properties":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the runtime_properties field of the given VBD.  If the key is not in that Map, then do nothing."},
"VBD.set_qos_algorithm_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the qos/algorithm_type field of the given VBD."},
"VBD.set_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the qos/algorithm_params field of the given VBD."},
"VBD.add_to_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the qos/algorithm_params field of the given VBD."},
"VBD.remove_from_qos_algorithm_params":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the qos/algorithm_params field of the given VBD.  If the key is not in that Map, then do nothing."},
"VBD.set_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"set",contents:{ty:"string"}},doc:"New value to set"}],doc:"Set the qos/supported_algorithms field of the given VBD."},
"VBD.add_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to add"}],doc:"Add the given value to the qos/supported_algorithms field of the given VBD.  If the value is already in that Set, then do nothing."},
"VBD.remove_qos_supported_algorithms":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"Value to remove"}],doc:"Remove the given value from the qos/supported_algorithms field of the given VBD.  If the value is not in that Set, then do nothing."},
"VBD.set_metrics":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VBD_metrics"},doc:"New value to set"}],doc:"Set the metrics field of the given VBD."},
"VBD.eject":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vbd",ty:{ty:"ref",class:"VBD"},doc:"The vbd representing the CDROM-like device"}],doc:"Remove the media from the device and leave it empty"},
"VBD.insert":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"vbd",ty:{ty:"ref",class:"VBD"},doc:"The vbd representing the CDROM-like device"},{name:"vdi",ty:{ty:"ref",class:"VDI"},doc:"The new VDI to 'insert'"}],doc:"Insert new media into the device"},
"VBD.plug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to hotplug"}],doc:"Hotplug the specified VBD, dynamically attaching it to the running VM"},
"VBD.unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to hot-unplug"}],doc:"Hot-unplug the specified VBD, dynamically unattaching it from the running VM"},
"VBD.unplug_force":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to forcibly unplug"}],doc:"Forcibly unplug the specified VBD"},
"VBD.unplug_force_no_safety_check":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to forcibly unplug (no safety checks are applied to test if the device supports surprise-remove)"}],doc:"Forcibly unplug the specified VBD without any safety checks. This is an extremely dangerous operation in the general case that can cause guest crashes and data corruption; it should be called with extreme caution."},
"VBD.assert_attachable":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to query"}],doc:"Throws an error if this VBD could not be attached to this VM if the VM were running. Intended for debugging."},
"VBD.pause":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to pause"}],doc:"Stop the backend device servicing requests so that an operation can be performed on the disk (eg live resize, snapshot)"},
"VBD.unpause":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD"},doc:"The VBD to unpause"},{name:"token",ty:{ty:"string"},doc:"The token from VBD.pause"}],doc:"Restart the backend device after it was paused while an operation was performed on the disk (eg live resize, snapshot)"},
"VBD.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VBDs known to the system."},
"VBD.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VBDs known to the system."},
"VBD.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VBD references to VBD records for all VBDs known to the system."},
"VBD_metrics.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VBD_metrics."},
"VBD_metrics.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VBD_metrics"},
"VBD_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VBD_metrics instances known to the system."},
"VBD_metrics.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VBD_metrics instance with the specified UUID."},
"VBD_metrics.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VBD_metrics"},doc:"All constructor arguments"}],doc:"Create a new VBD_metrics instance, and return its handle."},
"VBD_metrics.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Destroy the specified VBD_metrics instance."},
"VBD_metrics.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the uuid field of the given VBD_metrics."},
"VBD_metrics.get_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the io/read_kbs field of the given VBD_metrics."},
"VBD_metrics.get_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the io/write_kbs field of the given VBD_metrics."},
"VBD_metrics.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the last_updated field of the given VBD_metrics."},
"VBD_metrics.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"}],doc:"Get the other_config field of the given VBD_metrics."},
"VBD_metrics.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VBD_metrics."},
"VBD_metrics.set_io_read_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/read_kbs field of the given VBD_metrics."},
"VBD_metrics.set_io_write_kbs":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"float"},doc:"New value to set"}],doc:"Set the io/write_kbs field of the given VBD_metrics."},
"VBD_metrics.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given VBD_metrics."},
"VBD_metrics.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given VBD_metrics."},
"VBD_metrics.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given VBD_metrics."},
"VBD_metrics.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VBD_metrics"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given VBD_metrics.  If the key is not in that Map, then do nothing."},
"VBD_metrics.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VBD_metrics instances known to the system."},
"VBD_metrics.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the VBD_metrics instances known to the system."},
"VBD_metrics.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of VBD_metrics references to VBD_metrics records for all VBD_metrics instances known to the system."},
"PBD.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given PBD."},
"PBD.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class PBD"},
"PBD.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PBDs known to the system."},
"PBD.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the PBD instance with the specified UUID."},
"PBD.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"PBD"},doc:"All constructor arguments"}],doc:"Create a new PBD instance, and return its handle."},
"PBD.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Destroy the specified PBD instance."},
"PBD.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the uuid field of the given PBD."},
"PBD.get_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the host field of the given PBD."},
"PBD.get_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the SR field of the given PBD."},
"PBD.get_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the device_config field of the given PBD."},
"PBD.get_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the currently_attached field of the given PBD."},
"PBD.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"}],doc:"Get the other_config field of the given PBD."},
"PBD.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given PBD."},
"PBD.set_host":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"host"},doc:"New value to set"}],doc:"Set the host field of the given PBD."},
"PBD.set_SR":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"SR"},doc:"New value to set"}],doc:"Set the SR field of the given PBD."},
"PBD.set_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the device_config field of the given PBD."},
"PBD.add_to_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the device_config field of the given PBD."},
"PBD.remove_from_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the device_config field of the given PBD.  If the key is not in that Map, then do nothing."},
"PBD.set_currently_attached":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"bool"},doc:"New value to set"}],doc:"Set the currently_attached field of the given PBD."},
"PBD.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given PBD."},
"PBD.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given PBD."},
"PBD.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given PBD.  If the key is not in that Map, then do nothing."},
"PBD.plug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"The PBD to activate"}],doc:"Activate the specified PBD, causing the referenced SR to be attached and scanned"},
"PBD.unplug":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"The PBD to deactivate"}],doc:"Deactivate the specified PBD, causing the referenced SR to be detached and nolonger scanned"},
"PBD.set_device_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"PBD"},doc:"The PBD to modify"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"The new value of the PBD's device_config"}],doc:"Sets the PBD's device_config field"},
"PBD.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the PBDs known to the system."},
"PBD.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the PBDs known to the system."},
"PBD.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of PBD references to PBD records for all PBDs known to the system."},
"crashdump.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given crashdump."},
"crashdump.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class crashdump"},
"crashdump.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the crashdumps known to the system."},
"crashdump.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the crashdump instance with the specified UUID."},
"crashdump.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"crashdump"},doc:"All constructor arguments"}],doc:"Create a new crashdump instance, and return its handle."},
"crashdump.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Destroy the specified crashdump instance."},
"crashdump.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get the uuid field of the given crashdump."},
"crashdump.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get the VM field of the given crashdump."},
"crashdump.get_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get the VDI field of the given crashdump."},
"crashdump.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"}],doc:"Get the other_config field of the given crashdump."},
"crashdump.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given crashdump."},
"crashdump.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given crashdump."},
"crashdump.set_VDI":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VDI"},doc:"New value to set"}],doc:"Set the VDI field of the given crashdump."},
"crashdump.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given crashdump."},
"crashdump.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given crashdump."},
"crashdump.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given crashdump.  If the key is not in that Map, then do nothing."},
"crashdump.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"crashdump"},doc:"The crashdump to destroy"}],doc:"Destroy the specified crashdump"},
"crashdump.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the crashdumps known to the system."},
"crashdump.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the crashdumps known to the system."},
"crashdump.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of crashdump references to crashdump records for all crashdumps known to the system."},
"VTPM.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given VTPM."},
"VTPM.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class VTPM"},
"VTPM.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the VTPMs known to the system."},
"VTPM.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the VTPM instance with the specified UUID."},
"VTPM.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"VTPM"},doc:"All constructor arguments"}],doc:"Create a new VTPM instance, and return its handle."},
"VTPM.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Destroy the specified VTPM instance."},
"VTPM.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Get the uuid field of the given VTPM."},
"VTPM.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Get the VM field of the given VTPM."},
"VTPM.get_backend":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"}],doc:"Get the backend field of the given VTPM."},
"VTPM.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given VTPM."},
"VTPM.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given VTPM."},
"VTPM.set_backend":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"VTPM"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the backend field of the given VTPM."},
"console.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given console."},
"console.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class console"},
"console.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the consoles known to the system."},
"console.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the console instance with the specified UUID."},
"console.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"console"},doc:"All constructor arguments"}],doc:"Create a new console instance, and return its handle."},
"console.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Destroy the specified console instance."},
"console.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the uuid field of the given console."},
"console.get_protocol":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the protocol field of the given console."},
"console.get_location":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the location field of the given console."},
"console.get_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the VM field of the given console."},
"console.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the other_config field of the given console."},
"console.get_port":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"}],doc:"Get the port field of the given console."},
"console.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given console."},
"console.set_protocol":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"enum",name:"console_protocol",values:["vt100","rfb","rdp"]},doc:"New value to set"}],doc:"Set the protocol field of the given console."},
"console.set_location":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the location field of the given console."},
"console.set_VM":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"ref",class:"VM"},doc:"New value to set"}],doc:"Set the VM field of the given console."},
"console.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given console."},
"console.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given console."},
"console.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given console.  If the key is not in that Map, then do nothing."},
"console.set_port":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"console"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the port field of the given console."},
"console.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the consoles known to the system."},
"console.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the consoles known to the system."},
"console.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of console references to console records for all consoles known to the system."},
"user.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given user."},
"user.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class user"},
"user.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the users known to the system."},
"user.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the user instance with the specified UUID."},
"user.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"user"},doc:"All constructor arguments"}],doc:"Create a new user instance, and return its handle."},
"user.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Destroy the specified user instance."},
"user.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get the uuid field of the given user."},
"user.get_short_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get the short_name field of the given user."},
"user.get_fullname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get the fullname field of the given user."},
"user.get_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"}],doc:"Get the other_config field of the given user."},
"user.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given user."},
"user.set_short_name":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the short_name field of the given user."},
"user.set_fullname":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the fullname field of the given user."},
"user.set_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"value",ty:{ty:"map",keys:{ty:"string"},values:{ty:"string"}},doc:"New value to set"}],doc:"Set the other_config field of the given user."},
"user.add_to_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to add"},{name:"value",ty:{ty:"string"},doc:"Value to add"}],doc:"Add the given key-value pair to the other_config field of the given user."},
"user.remove_from_other_config":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"user"},doc:"reference to the object"},{name:"key",ty:{ty:"string"},doc:"Key to remove"}],doc:"Remove the given key and its corresponding value from the other_config field of the given user.  If the key is not in that Map, then do nothing."},
"blob.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get a record containing the current state of the given blob."},
"blob.get_record_internal":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"returns a record containing the state of an instance of class blob"},
"blob.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the blobs known to the system."},
"blob.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"UUID of object to return"}],doc:"Get a reference to the blob instance with the specified UUID."},
"blob.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"args",ty:{ty:"record",name:"blob"},doc:"All constructor arguments"}],doc:"Create a new blob instance, and return its handle."},
"blob.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Destroy the specified blob instance."},
"blob.get_by_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"label",ty:{ty:"string"},doc:"label of object to return"}],doc:"Get all the blob instances with the given label."},
"blob.get_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the uuid field of the given blob."},
"blob.get_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the name/label field of the given blob."},
"blob.get_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the name/description field of the given blob."},
"blob.get_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the size field of the given blob."},
"blob.get_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the last_updated field of the given blob."},
"blob.get_mime_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"}],doc:"Get the mime_type field of the given blob."},
"blob.set_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the uuid field of the given blob."},
"blob.set_name_label":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/label field of the given blob."},
"blob.set_name_description":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the name/description field of the given blob."},
"blob.set_size":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"int"},doc:"New value to set"}],doc:"Set the size field of the given blob."},
"blob.set_last_updated":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"datetime"},doc:"New value to set"}],doc:"Set the last_updated field of the given blob."},
"blob.set_mime_type":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"reference to the object"},{name:"value",ty:{ty:"string"},doc:"New value to set"}],doc:"Set the mime_type field of the given blob."},
"blob.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"mime_type",ty:{ty:"string"},doc:"The mime-type of the blob. Defaults to 'application/octet-stream' if the empty string is supplied"}],doc:"Create a placeholder for a binary blob"},
"blob.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"blob"},doc:"The reference of the blob to destroy"}],doc:""},
"blob.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a list of all the blobs known to the system."},
"blob.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"expression representing records to fetch"}],doc:"Return a list of all the blobs known to the system."},
"blob.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:"Return a map of blob references to blob records for all blobs known to the system."},
"message.create":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"name",ty:{ty:"string"},doc:"The name of the message"},{name:"priority",ty:{ty:"int"},doc:"The priority of the message"},{name:"cls",ty:{ty:"enum",name:"cls",values:["VM","Host","SR","Pool"]},doc:"The class of object this message is associated with"},{name:"obj_uuid",ty:{ty:"string"},doc:"The uuid of the object this message is associated with"},{name:"body",ty:{ty:"string"},doc:"The body of the message"}],doc:""},
"message.destroy":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"message"},doc:"The reference of the message to destroy"}],doc:""},
"message.get":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"cls",ty:{ty:"enum",name:"cls",values:["VM","Host","SR","Pool"]},doc:"The class of object"},{name:"obj_uuid",ty:{ty:"string"},doc:"The uuid of the object"},{name:"since",ty:{ty:"datetime"},doc:"The cutoff time"}],doc:""},
"message.get_all":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:""},
"message.get_since":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"since",ty:{ty:"datetime"},doc:"The cutoff time"}],doc:""},
"message.get_record":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"self",ty:{ty:"ref",class:"message"},doc:"The reference to the message"}],doc:""},
"message.get_by_uuid":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"uuid",ty:{ty:"string"},doc:"The uuid of the message"}],doc:""},
"message.get_all_records":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"}],doc:""},
"message.get_all_records_where":{params:[{name:"session_id",ty:{ty:"ref",class:"session"},doc:"The session reference"},{name:"expr",ty:{ty:"string"},doc:"The expression to match (not currently used)"}],doc:""}};